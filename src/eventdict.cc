//
// File generated by rootcint at Mon Jun 24 15:30:57 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME eventdict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "eventdict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void myobject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_myobject(void *p = 0);
   static void *newArray_myobject(Long_t size, void *p);
   static void delete_myobject(void *p);
   static void deleteArray_myobject(void *p);
   static void destruct_myobject(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::myobject*)
   {
      ::myobject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::myobject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("myobject", ::myobject::Class_Version(), "/afs/cern.ch/work/j/jez/private/CMS/analysis/ZH/53x/May13Version/CMSSW_5_3_7_patch6/src/Analysis/NtupleProducer/src/../../../Analysis/NtupleProducer/interface/myobject.h", 8,
                  typeid(::myobject), DefineBehavior(ptr, ptr),
                  &::myobject::Dictionary, isa_proxy, 4,
                  sizeof(::myobject) );
      instance.SetNew(&new_myobject);
      instance.SetNewArray(&newArray_myobject);
      instance.SetDelete(&delete_myobject);
      instance.SetDeleteArray(&deleteArray_myobject);
      instance.SetDestructor(&destruct_myobject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::myobject*)
   {
      return GenerateInitInstanceLocal((::myobject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::myobject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void myGenobject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_myGenobject(void *p = 0);
   static void *newArray_myGenobject(Long_t size, void *p);
   static void delete_myGenobject(void *p);
   static void deleteArray_myGenobject(void *p);
   static void destruct_myGenobject(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::myGenobject*)
   {
      ::myGenobject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::myGenobject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("myGenobject", ::myGenobject::Class_Version(), "/afs/cern.ch/work/j/jez/private/CMS/analysis/ZH/53x/May13Version/CMSSW_5_3_7_patch6/src/Analysis/NtupleProducer/src/../../../Analysis/NtupleProducer/interface/myGenobject.h", 8,
                  typeid(::myGenobject), DefineBehavior(ptr, ptr),
                  &::myGenobject::Dictionary, isa_proxy, 4,
                  sizeof(::myGenobject) );
      instance.SetNew(&new_myGenobject);
      instance.SetNewArray(&newArray_myGenobject);
      instance.SetDelete(&delete_myGenobject);
      instance.SetDeleteArray(&deleteArray_myGenobject);
      instance.SetDestructor(&destruct_myGenobject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::myGenobject*)
   {
      return GenerateInitInstanceLocal((::myGenobject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::myGenobject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void myevent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_myevent(void *p = 0);
   static void *newArray_myevent(Long_t size, void *p);
   static void delete_myevent(void *p);
   static void deleteArray_myevent(void *p);
   static void destruct_myevent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::myevent*)
   {
      ::myevent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::myevent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("myevent", ::myevent::Class_Version(), "/afs/cern.ch/work/j/jez/private/CMS/analysis/ZH/53x/May13Version/CMSSW_5_3_7_patch6/src/Analysis/NtupleProducer/src/../../../Analysis/NtupleProducer/interface/myevent.h", 12,
                  typeid(::myevent), DefineBehavior(ptr, ptr),
                  &::myevent::Dictionary, isa_proxy, 4,
                  sizeof(::myevent) );
      instance.SetNew(&new_myevent);
      instance.SetNewArray(&newArray_myevent);
      instance.SetDelete(&delete_myevent);
      instance.SetDeleteArray(&deleteArray_myevent);
      instance.SetDestructor(&destruct_myevent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::myevent*)
   {
      return GenerateInitInstanceLocal((::myevent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::myevent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator_Dictionary();
   static void *new_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator(void *p = 0);
   static void *newArray_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator(Long_t size, void *p);
   static void delete_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator(void *p);
   static void deleteArray_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator(void *p);
   static void destruct_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::vector<myobject,allocator<myobject> >::iterator*)
   {
      ::vector<myobject,allocator<myobject> >::iterator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::vector<myobject,allocator<myobject> >::iterator),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<myobject,allocator<myobject> >::iterator", "prec_stl/vector", 218,
                  typeid(::vector<myobject,allocator<myobject> >::iterator), DefineBehavior(ptr, ptr),
                  0, &vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator_Dictionary, isa_proxy, 0,
                  sizeof(::vector<myobject,allocator<myobject> >::iterator) );
      instance.SetNew(&new_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator);
      instance.SetNewArray(&newArray_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator);
      instance.SetDelete(&delete_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator);
      instance.SetDeleteArray(&deleteArray_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator);
      instance.SetDestructor(&destruct_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::vector<myobject,allocator<myobject> >::iterator*)
   {
      return GenerateInitInstanceLocal((::vector<myobject,allocator<myobject> >::iterator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::vector<myobject,allocator<myobject> >::iterator*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::vector<myobject,allocator<myobject> >::iterator*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator_Dictionary();
   static void *new_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator(void *p = 0);
   static void *newArray_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator(Long_t size, void *p);
   static void delete_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator(void *p);
   static void deleteArray_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator(void *p);
   static void destruct_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::vector<myGenobject,allocator<myGenobject> >::iterator*)
   {
      ::vector<myGenobject,allocator<myGenobject> >::iterator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::vector<myGenobject,allocator<myGenobject> >::iterator),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<myGenobject,allocator<myGenobject> >::iterator", "prec_stl/vector", 218,
                  typeid(::vector<myGenobject,allocator<myGenobject> >::iterator), DefineBehavior(ptr, ptr),
                  0, &vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator_Dictionary, isa_proxy, 0,
                  sizeof(::vector<myGenobject,allocator<myGenobject> >::iterator) );
      instance.SetNew(&new_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator);
      instance.SetNewArray(&newArray_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator);
      instance.SetDelete(&delete_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator);
      instance.SetDeleteArray(&deleteArray_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator);
      instance.SetDestructor(&destruct_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::vector<myGenobject,allocator<myGenobject> >::iterator*)
   {
      return GenerateInitInstanceLocal((::vector<myGenobject,allocator<myGenobject> >::iterator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::vector<myGenobject,allocator<myGenobject> >::iterator*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::vector<myGenobject,allocator<myGenobject> >::iterator*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
TClass *myobject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *myobject::Class_Name()
{
   return "myobject";
}

//______________________________________________________________________________
const char *myobject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::myobject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int myobject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::myobject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void myobject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::myobject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *myobject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::myobject*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *myGenobject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *myGenobject::Class_Name()
{
   return "myGenobject";
}

//______________________________________________________________________________
const char *myGenobject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::myGenobject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int myGenobject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::myGenobject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void myGenobject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::myGenobject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *myGenobject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::myGenobject*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *myevent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *myevent::Class_Name()
{
   return "myevent";
}

//______________________________________________________________________________
const char *myevent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::myevent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int myevent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::myevent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void myevent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::myevent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *myevent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::myevent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void myobject::Streamer(TBuffer &R__b)
{
   // Stream an object of class myobject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(myobject::Class(),this);
   } else {
      R__b.WriteClassBuffer(myobject::Class(),this);
   }
}

//______________________________________________________________________________
void myobject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class myobject.
      TClass *R__cl = ::myobject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px", &px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py", &py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E", &E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "et", &et);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz", &pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass", &mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dz_Ver_match", &dz_Ver_match);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Energy", &Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mt", &mt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jetMass", &jetMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta_SC", &eta_SC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mod_pt", &mod_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mod_eta", &mod_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mod_phi", &mod_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mod_charge", &mod_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mod_z", &mod_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mod_mass", &mod_mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Gmod_pt", &Gmod_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Gmod_eta", &Gmod_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Gmod_phi", &Gmod_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Gmod_charge", &Gmod_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Gmod_z", &Gmod_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Gmod_mass", &Gmod_mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pfIsoAll", &pfIsoAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pfIsoCharged", &pfIsoCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pfIsoNeutral", &pfIsoNeutral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pfIsoGamma", &pfIsoGamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pfIsoPU", &pfIsoPU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pfIsoPULow", &pfIsoPULow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Id_mvaTrg", &Id_mvaTrg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Id_mvaNonTrg", &Id_mvaNonTrg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pfIsoAll_NoPFId", &pfIsoAll_NoPFId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pfIsoCharged_NoPFId", &pfIsoCharged_NoPFId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pfIsoNeutral_NoPFId", &pfIsoNeutral_NoPFId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pfIsoGamma_NoPFId", &pfIsoGamma_NoPFId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pfIsoPU_NoPFId", &pfIsoPU_NoPFId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z_expo", &z_expo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "position_Rho", &position_Rho);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "position_rho", &position_rho);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdgId", &pdgId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "status", &status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mod_pdgId", &mod_pdgId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mod_status", &mod_status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Gmod_pdgId", &Gmod_pdgId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Gmod_status", &Gmod_status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tracksSize", &tracksSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gen_index", &gen_index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "decay_mode", &decay_mode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dB", &dB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d0", &d0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "emfraction", &emfraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DepositR03Ecal", &DepositR03Ecal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DepositR03Hcal", &DepositR03Hcal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DepositR03TrackerOfficial", &DepositR03TrackerOfficial);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpha", &alpha);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GlobalMuonPromptTight", &GlobalMuonPromptTight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TMOneStationLoose", &TMOneStationLoose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TM2DCompatibilityLoose", &TM2DCompatibilityLoose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isGlobalMuon", &isGlobalMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isTrackerMuon", &isTrackerMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isStandAloneMuon", &isStandAloneMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isPFMuon", &isPFMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numberOfValidMuonHits", &numberOfValidMuonHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numberOfHits", &numberOfHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numMatchStation", &numMatchStation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numLostHitEle", &numLostHitEle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numValidHitEle", &numValidHitEle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numHitEleInner", &numHitEleInner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numLostHitEleInner", &numLostHitEleInner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "normalizedChi2_innTrk", &normalizedChi2_innTrk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numberOfValidMuonHits_innTrk", &numberOfValidMuonHits_innTrk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numberOfHits_innTrk", &numberOfHits_innTrk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "normalizedChi2", &normalizedChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trkLayerMeasure", &trkLayerMeasure);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "intrkLayerMeasure", &intrkLayerMeasure);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "intrkLayerpixel", &intrkLayerpixel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dxy_in", &dxy_in);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dZ_in", &dZ_in);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dxy_PV", &dxy_PV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dz_PV", &dz_PV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IP3D", &IP3D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isFake", &isFake);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isValid", &isValid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndof", &ndof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Num_Vertex", &Num_Vertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jetId_loose", &jetId_loose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jetId_tight", &jetId_tight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HoverE", &HoverE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaPhiSuperClusterTrackAtVtx", &deltaPhiSuperClusterTrackAtVtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaEtaSuperClusterTrackAtVtx", &deltaEtaSuperClusterTrackAtVtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaIetaIeta", &sigmaIetaIeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaEtaEta", &sigmaEtaEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ecalIso", &ecalIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hcalIso", &hcalIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caloIso", &caloIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackIso", &trackIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hcalOverEcal", &hcalOverEcal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SIP", &SIP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "passConversionVeto", &passConversionVeto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rawE_SC", &rawE_SC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "preshowerE_SC", &preshowerE_SC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bDiscriminatiors_CSV", &bDiscriminatiors_CSV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bDiscriminatiors_JP", &bDiscriminatiors_JP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bDiscriminatiors_TCHPT", &bDiscriminatiors_TCHPT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jetPt", &jetPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jetEta", &jetEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jetPhi", &jetPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leadChargedParticlePt", &leadChargedParticlePt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leadTrackD0", &leadTrackD0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "puJetIdLoose", &puJetIdLoose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "puJetIdMedium", &puJetIdMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "puJetIdTight", &puJetIdTight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mva_e_pi", &mva_e_pi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mva_pi_mu", &mva_pi_mu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mva_e_mu", &mva_e_mu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hcalEnergy", &hcalEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ecalEnergy", &ecalEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackRefPt", &trackRefPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numChargedParticlesSignalCone", &numChargedParticlesSignalCone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numNeutralHadronsSignalCone", &numNeutralHadronsSignalCone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numPhotonsSignalCone", &numPhotonsSignalCone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numParticlesSignalCone", &numParticlesSignalCone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "signalPiZeroCandidates", &signalPiZeroCandidates);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numChargedParticlesIsoCone", &numChargedParticlesIsoCone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numNeutralHadronsIsoCone", &numNeutralHadronsIsoCone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numPhotonsIsoCone", &numPhotonsIsoCone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numParticlesIsoCone", &numParticlesIsoCone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptSumChargedParticlesIsoCone", &ptSumChargedParticlesIsoCone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptSumPhotonsIsoCone", &ptSumPhotonsIsoCone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sig_track1_pt", &sig_track1_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sig_track1_phi", &sig_track1_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sig_track1_eta", &sig_track1_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sig_track1_m", &sig_track1_m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sig_track2_pt", &sig_track2_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sig_track2_phi", &sig_track2_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sig_track2_eta", &sig_track2_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sig_track2_m", &sig_track2_m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sig_track3_pt", &sig_track3_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sig_track3_phi", &sig_track3_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sig_track3_eta", &sig_track3_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sig_track3_m", &sig_track3_m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sig_pi0_1_pt", &sig_pi0_1_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sig_pi0_1_phi", &sig_pi0_1_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sig_pi0_1_eta", &sig_pi0_1_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sig_pi0_1_m", &sig_pi0_1_m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sig_pi0_2_pt", &sig_pi0_2_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sig_pi0_2_phi", &sig_pi0_2_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sig_pi0_2_eta", &sig_pi0_2_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sig_pi0_2_m", &sig_pi0_2_m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByDecayModeFinding", &discriminationByDecayModeFinding);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByVeryLooseIsolation", &discriminationByVeryLooseIsolation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByLooseIsolation", &discriminationByLooseIsolation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByMediumIsolation", &discriminationByMediumIsolation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByTightIsolation", &discriminationByTightIsolation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByElectronLoose", &discriminationByElectronLoose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByElectronMedium", &discriminationByElectronMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByElectronTight", &discriminationByElectronTight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByElectronMVA", &discriminationByElectronMVA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByElectronMVA2Loose", &discriminationByElectronMVA2Loose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByElectronMVA2Medium", &discriminationByElectronMVA2Medium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByElectronMVA2Tight", &discriminationByElectronMVA2Tight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByElectronMVA3Loose", &discriminationByElectronMVA3Loose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByElectronMVA3Medium", &discriminationByElectronMVA3Medium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByElectronMVA3Tight", &discriminationByElectronMVA3Tight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByElectronMVA3VTight", &discriminationByElectronMVA3VTight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByMuonLoose", &discriminationByMuonLoose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByMuonMedium", &discriminationByMuonMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByMuonTight", &discriminationByMuonTight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByMuonLoose2", &discriminationByMuonLoose2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByMuonMedium2", &discriminationByMuonMedium2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByMuonTight2", &discriminationByMuonTight2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByMuonLoose3", &discriminationByMuonLoose3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discriminationByMuonTight3", &discriminationByMuonTight3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byVLooseCombinedIsolationDeltaBetaCorr", &byVLooseCombinedIsolationDeltaBetaCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byLooseCombinedIsolationDeltaBetaCorr", &byLooseCombinedIsolationDeltaBetaCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byMediumCombinedIsolationDeltaBetaCorr", &byMediumCombinedIsolationDeltaBetaCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byTightCombinedIsolationDeltaBetaCorr", &byTightCombinedIsolationDeltaBetaCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byLooseCombinedIsolationDeltaBetaCorr3Hits", &byLooseCombinedIsolationDeltaBetaCorr3Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byMediumCombinedIsolationDeltaBetaCorr3Hits", &byMediumCombinedIsolationDeltaBetaCorr3Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byTightCombinedIsolationDeltaBetaCorr3Hits", &byTightCombinedIsolationDeltaBetaCorr3Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byRawCombinedIsolationDeltaBetaCorr3Hits", &byRawCombinedIsolationDeltaBetaCorr3Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byIsolationMVAraw", &byIsolationMVAraw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byIsolationMVA2raw", &byIsolationMVA2raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byLooseIsolationMVA", &byLooseIsolationMVA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byMediumIsolationMVA", &byMediumIsolationMVA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byTightIsolationMVA", &byTightIsolationMVA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byLooseIsolationMVA2", &byLooseIsolationMVA2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byMediumIsolationMVA2", &byMediumIsolationMVA2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byTightIsolationMVA2", &byTightIsolationMVA2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasTrgObject_loose", &hasTrgObject_loose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrgObjectEta_loose", &TrgObjectEta_loose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrgObjectPt_loose", &TrgObjectPt_loose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrgObjectPhi_loose", &TrgObjectPhi_loose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasTrgObject_medium", &hasTrgObject_medium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrgObjectEta_medium", &TrgObjectEta_medium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrgObjectPt_medium", &TrgObjectPt_medium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrgObjectPhi_medium", &TrgObjectPhi_medium);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_myobject(void *p) {
      return  p ? new(p) ::myobject : new ::myobject;
   }
   static void *newArray_myobject(Long_t nElements, void *p) {
      return p ? new(p) ::myobject[nElements] : new ::myobject[nElements];
   }
   // Wrapper around operator delete
   static void delete_myobject(void *p) {
      delete ((::myobject*)p);
   }
   static void deleteArray_myobject(void *p) {
      delete [] ((::myobject*)p);
   }
   static void destruct_myobject(void *p) {
      typedef ::myobject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::myobject

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::vector<myobject,allocator<myobject> >::iterator : new ::vector<myobject,allocator<myobject> >::iterator;
   }
   static void *newArray_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::vector<myobject,allocator<myobject> >::iterator[nElements] : new ::vector<myobject,allocator<myobject> >::iterator[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator(void *p) {
      delete ((::vector<myobject,allocator<myobject> >::iterator*)p);
   }
   static void deleteArray_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator(void *p) {
      delete [] ((::vector<myobject,allocator<myobject> >::iterator*)p);
   }
   static void destruct_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator(void *p) {
      typedef ::vector<myobject,allocator<myobject> >::iterator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::vector<myobject,allocator<myobject> >::iterator

//______________________________________________________________________________
void myGenobject::Streamer(TBuffer &R__b)
{
   // Stream an object of class myGenobject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(myGenobject::Class(),this);
   } else {
      R__b.WriteClassBuffer(myGenobject::Class(),this);
   }
}

//______________________________________________________________________________
void myGenobject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class myGenobject.
      TClass *R__cl = ::myGenobject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass", &mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "et", &et);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mod_pt", &mod_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mod_eta", &mod_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mod_phi", &mod_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mod_charge", &mod_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mod_z", &mod_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mod_mass", &mod_mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Gmod_pt", &Gmod_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Gmod_eta", &Gmod_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Gmod_phi", &Gmod_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Gmod_charge", &Gmod_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Gmod_z", &Gmod_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Gmod_mass", &Gmod_mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdgId", &pdgId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "status", &status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mod_pdgId", &mod_pdgId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mod_status", &mod_status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Gmod_pdgId", &Gmod_pdgId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Gmod_status", &Gmod_status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gen_index", &gen_index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "decay_mode", &decay_mode);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_myGenobject(void *p) {
      return  p ? new(p) ::myGenobject : new ::myGenobject;
   }
   static void *newArray_myGenobject(Long_t nElements, void *p) {
      return p ? new(p) ::myGenobject[nElements] : new ::myGenobject[nElements];
   }
   // Wrapper around operator delete
   static void delete_myGenobject(void *p) {
      delete ((::myGenobject*)p);
   }
   static void deleteArray_myGenobject(void *p) {
      delete [] ((::myGenobject*)p);
   }
   static void destruct_myGenobject(void *p) {
      typedef ::myGenobject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::myGenobject

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::vector<myGenobject,allocator<myGenobject> >::iterator : new ::vector<myGenobject,allocator<myGenobject> >::iterator;
   }
   static void *newArray_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::vector<myGenobject,allocator<myGenobject> >::iterator[nElements] : new ::vector<myGenobject,allocator<myGenobject> >::iterator[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator(void *p) {
      delete ((::vector<myGenobject,allocator<myGenobject> >::iterator*)p);
   }
   static void deleteArray_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator(void *p) {
      delete [] ((::vector<myGenobject,allocator<myGenobject> >::iterator*)p);
   }
   static void destruct_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator(void *p) {
      typedef ::vector<myGenobject,allocator<myGenobject> >::iterator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::vector<myGenobject,allocator<myGenobject> >::iterator

//______________________________________________________________________________
void myevent::Streamer(TBuffer &R__b)
{
   // Stream an object of class myevent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(myevent::Class(),this);
   } else {
      R__b.WriteClassBuffer(myevent::Class(),this);
   }
}

//______________________________________________________________________________
void myevent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class myevent.
      TClass *R__cl = ::myevent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecPFJetsAK5", (void*)&RecPFJetsAK5);
      R__insp.InspectMember("vector<myobject>", (void*)&RecPFJetsAK5, "RecPFJetsAK5.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecPFJetsAK5_Up_SubTotal", (void*)&RecPFJetsAK5_Up_SubTotal);
      R__insp.InspectMember("vector<myobject>", (void*)&RecPFJetsAK5_Up_SubTotal, "RecPFJetsAK5_Up_SubTotal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecPFJetsAK5_Down_SubTotal", (void*)&RecPFJetsAK5_Down_SubTotal);
      R__insp.InspectMember("vector<myobject>", (void*)&RecPFJetsAK5_Down_SubTotal, "RecPFJetsAK5_Down_SubTotal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecPFJetsAK5_Up_Total", (void*)&RecPFJetsAK5_Up_Total);
      R__insp.InspectMember("vector<myobject>", (void*)&RecPFJetsAK5_Up_Total, "RecPFJetsAK5_Up_Total.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecPFJetsAK5_Down_Total", (void*)&RecPFJetsAK5_Down_Total);
      R__insp.InspectMember("vector<myobject>", (void*)&RecPFJetsAK5_Down_Total, "RecPFJetsAK5_Down_Total.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecGenParticle", (void*)&RecGenParticle);
      R__insp.InspectMember("vector<myGenobject>", (void*)&RecGenParticle, "RecGenParticle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecGenMet", (void*)&RecGenMet);
      R__insp.InspectMember("vector<myGenobject>", (void*)&RecGenMet, "RecGenMet.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecGenJet", (void*)&RecGenJet);
      R__insp.InspectMember("vector<myGenobject>", (void*)&RecGenJet, "RecGenJet.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecGenTauVisible", (void*)&RecGenTauVisible);
      R__insp.InspectMember("vector<myGenobject>", (void*)&RecGenTauVisible, "RecGenTauVisible.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PreSelectedElectrons", (void*)&PreSelectedElectrons);
      R__insp.InspectMember("vector<myobject>", (void*)&PreSelectedElectrons, "PreSelectedElectrons.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PreSelectedMuons", (void*)&PreSelectedMuons);
      R__insp.InspectMember("vector<myobject>", (void*)&PreSelectedMuons, "PreSelectedMuons.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PreSelectedHPSTaus", (void*)&PreSelectedHPSTaus);
      R__insp.InspectMember("vector<myobject>", (void*)&PreSelectedHPSTaus, "PreSelectedHPSTaus.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SelectedHPSTaus", (void*)&SelectedHPSTaus);
      R__insp.InspectMember("vector<myobject>", (void*)&SelectedHPSTaus, "SelectedHPSTaus.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecPFMet", (void*)&RecPFMet);
      R__insp.InspectMember("vector<myobject>", (void*)&RecPFMet, "RecPFMet.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecPFMetCor", (void*)&RecPFMetCor);
      R__insp.InspectMember("vector<myobject>", (void*)&RecPFMetCor, "RecPFMetCor.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecMVAMet", (void*)&RecMVAMet);
      R__insp.InspectMember("vector<myobject>", (void*)&RecMVAMet, "RecMVAMet.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RectcMet", (void*)&RectcMet);
      R__insp.InspectMember("vector<myobject>", (void*)&RectcMet, "RectcMet.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecPFMetCorElectronEnUp", (void*)&RecPFMetCorElectronEnUp);
      R__insp.InspectMember("vector<myobject>", (void*)&RecPFMetCorElectronEnUp, "RecPFMetCorElectronEnUp.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecPFMetCorElectronEnDown", (void*)&RecPFMetCorElectronEnDown);
      R__insp.InspectMember("vector<myobject>", (void*)&RecPFMetCorElectronEnDown, "RecPFMetCorElectronEnDown.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecPFMetCorMuonEnUp", (void*)&RecPFMetCorMuonEnUp);
      R__insp.InspectMember("vector<myobject>", (void*)&RecPFMetCorMuonEnUp, "RecPFMetCorMuonEnUp.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecPFMetCorMuonEnDown", (void*)&RecPFMetCorMuonEnDown);
      R__insp.InspectMember("vector<myobject>", (void*)&RecPFMetCorMuonEnDown, "RecPFMetCorMuonEnDown.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecPFMetCorTauEnUp", (void*)&RecPFMetCorTauEnUp);
      R__insp.InspectMember("vector<myobject>", (void*)&RecPFMetCorTauEnUp, "RecPFMetCorTauEnUp.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecPFMetCorTauEnDown", (void*)&RecPFMetCorTauEnDown);
      R__insp.InspectMember("vector<myobject>", (void*)&RecPFMetCorTauEnDown, "RecPFMetCorTauEnDown.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecPFMetCorJetEnUp", (void*)&RecPFMetCorJetEnUp);
      R__insp.InspectMember("vector<myobject>", (void*)&RecPFMetCorJetEnUp, "RecPFMetCorJetEnUp.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecPFMetCorJetEnDown", (void*)&RecPFMetCorJetEnDown);
      R__insp.InspectMember("vector<myobject>", (void*)&RecPFMetCorJetEnDown, "RecPFMetCorJetEnDown.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecPFMetCorJetResUp", (void*)&RecPFMetCorJetResUp);
      R__insp.InspectMember("vector<myobject>", (void*)&RecPFMetCorJetResUp, "RecPFMetCorJetResUp.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecPFMetCorJetResDown", (void*)&RecPFMetCorJetResDown);
      R__insp.InspectMember("vector<myobject>", (void*)&RecPFMetCorJetResDown, "RecPFMetCorJetResDown.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecPFMetCorUnclusteredEnUp", (void*)&RecPFMetCorUnclusteredEnUp);
      R__insp.InspectMember("vector<myobject>", (void*)&RecPFMetCorUnclusteredEnUp, "RecPFMetCorUnclusteredEnUp.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecPFMetCorUnclusteredEnDown", (void*)&RecPFMetCorUnclusteredEnDown);
      R__insp.InspectMember("vector<myobject>", (void*)&RecPFMetCorUnclusteredEnDown, "RecPFMetCorUnclusteredEnDown.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "smearedPatJets", (void*)&smearedPatJets);
      R__insp.InspectMember("vector<myobject>", (void*)&smearedPatJets, "smearedPatJets.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "smearedPatJetsResUp", (void*)&smearedPatJetsResUp);
      R__insp.InspectMember("vector<myobject>", (void*)&smearedPatJetsResUp, "smearedPatJetsResUp.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "smearedPatJetsResDown", (void*)&smearedPatJetsResDown);
      R__insp.InspectMember("vector<myobject>", (void*)&smearedPatJetsResDown, "smearedPatJetsResDown.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "shiftedPatJetsEnUpForCorrMEt", (void*)&shiftedPatJetsEnUpForCorrMEt);
      R__insp.InspectMember("vector<myobject>", (void*)&shiftedPatJetsEnUpForCorrMEt, "shiftedPatJetsEnUpForCorrMEt.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "shiftedPatJetsEnDownForCorrMEt", (void*)&shiftedPatJetsEnDownForCorrMEt);
      R__insp.InspectMember("vector<myobject>", (void*)&shiftedPatJetsEnDownForCorrMEt, "shiftedPatJetsEnDownForCorrMEt.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cleanPatJets", (void*)&cleanPatJets);
      R__insp.InspectMember("vector<myobject>", (void*)&cleanPatJets, "cleanPatJets.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vertex", (void*)&Vertex);
      R__insp.InspectMember("vector<myobject>", (void*)&Vertex, "Vertex.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HLT", (void*)&HLT);
      R__insp.InspectMember("map<string,int>", (void*)&HLT, "HLT.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runNumber", &runNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventNumber", &eventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lumiNumber", &lumiNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HLT_DiElectron", &HLT_DiElectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HLT_DiMuon", &HLT_DiMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PUInfo", &PUInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PUInfo_true", &PUInfo_true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PUInfo_Bunch0", &PUInfo_Bunch0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RhoCorr", &RhoCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RhoCenNeutral", &RhoCenNeutral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RhoCenCharged", &RhoCenCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RhoCenNeutralTight", &RhoCenNeutralTight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Rho", &Rho);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MET_sigMatrix_00", &MET_sigMatrix_00);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MET_sigMatrix_01", &MET_sigMatrix_01);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MET_sigMatrix_10", &MET_sigMatrix_10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MET_sigMatrix_11", &MET_sigMatrix_11);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MVAMet_sigMatrix_00", &MVAMet_sigMatrix_00);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MVAMet_sigMatrix_01", &MVAMet_sigMatrix_01);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MVAMet_sigMatrix_10", &MVAMet_sigMatrix_10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MVAMet_sigMatrix_11", &MVAMet_sigMatrix_11);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alphaQCD", &alphaQCD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alphaQED", &alphaQED);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qScale", &qScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "weight", &weight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasPDF", &hasPDF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasBinningValues", &hasBinningValues);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "signalProcessID", &signalProcessID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_First", &id_First);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_Second", &id_Second);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scalePDF", &scalePDF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x_First", &x_First);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x_Second", &x_Second);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xPDF_First", &xPDF_First);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xPDF_Second", &xPDF_Second);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binningValueSize", &binningValueSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binningValue0", &binningValue0);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_myevent(void *p) {
      return  p ? new(p) ::myevent : new ::myevent;
   }
   static void *newArray_myevent(Long_t nElements, void *p) {
      return p ? new(p) ::myevent[nElements] : new ::myevent[nElements];
   }
   // Wrapper around operator delete
   static void delete_myevent(void *p) {
      delete ((::myevent*)p);
   }
   static void deleteArray_myevent(void *p) {
      delete [] ((::myevent*)p);
   }
   static void destruct_myevent(void *p) {
      typedef ::myevent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::myevent

namespace ROOT {
   void maplEstringcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOintgR_Dictionary();
   static void *new_maplEstringcOintgR(void *p = 0);
   static void *newArray_maplEstringcOintgR(Long_t size, void *p);
   static void delete_maplEstringcOintgR(void *p);
   static void deleteArray_maplEstringcOintgR(void *p);
   static void destruct_maplEstringcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,int>*)
   {
      map<string,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,int>", -2, "map.dll", 0,
                  typeid(map<string,int>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,int>) );
      instance.SetNew(&new_maplEstringcOintgR);
      instance.SetNewArray(&newArray_maplEstringcOintgR);
      instance.SetDelete(&delete_maplEstringcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOintgR);
      instance.SetDestructor(&destruct_maplEstringcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int> : new map<string,int>;
   }
   static void *newArray_maplEstringcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int>[nElements] : new map<string,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOintgR(void *p) {
      delete ((map<string,int>*)p);
   }
   static void deleteArray_maplEstringcOintgR(void *p) {
      delete [] ((map<string,int>*)p);
   }
   static void destruct_maplEstringcOintgR(void *p) {
      typedef map<string,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,int>

namespace ROOT {
   void vectorlEmyGenobjectgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEmyGenobjectgR_Dictionary();
   static void *new_vectorlEmyGenobjectgR(void *p = 0);
   static void *newArray_vectorlEmyGenobjectgR(Long_t size, void *p);
   static void delete_vectorlEmyGenobjectgR(void *p);
   static void deleteArray_vectorlEmyGenobjectgR(void *p);
   static void destruct_vectorlEmyGenobjectgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<myGenobject>*)
   {
      vector<myGenobject> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<myGenobject>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<myGenobject>", -2, "prec_stl/vector", 49,
                  typeid(vector<myGenobject>), DefineBehavior(ptr, ptr),
                  0, &vectorlEmyGenobjectgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<myGenobject>) );
      instance.SetNew(&new_vectorlEmyGenobjectgR);
      instance.SetNewArray(&newArray_vectorlEmyGenobjectgR);
      instance.SetDelete(&delete_vectorlEmyGenobjectgR);
      instance.SetDeleteArray(&deleteArray_vectorlEmyGenobjectgR);
      instance.SetDestructor(&destruct_vectorlEmyGenobjectgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<myGenobject> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<myGenobject>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEmyGenobjectgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<myGenobject>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEmyGenobjectgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<myGenobject> : new vector<myGenobject>;
   }
   static void *newArray_vectorlEmyGenobjectgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<myGenobject>[nElements] : new vector<myGenobject>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEmyGenobjectgR(void *p) {
      delete ((vector<myGenobject>*)p);
   }
   static void deleteArray_vectorlEmyGenobjectgR(void *p) {
      delete [] ((vector<myGenobject>*)p);
   }
   static void destruct_vectorlEmyGenobjectgR(void *p) {
      typedef vector<myGenobject> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<myGenobject>

namespace ROOT {
   void vectorlEmyobjectgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEmyobjectgR_Dictionary();
   static void *new_vectorlEmyobjectgR(void *p = 0);
   static void *newArray_vectorlEmyobjectgR(Long_t size, void *p);
   static void delete_vectorlEmyobjectgR(void *p);
   static void deleteArray_vectorlEmyobjectgR(void *p);
   static void destruct_vectorlEmyobjectgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<myobject>*)
   {
      vector<myobject> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<myobject>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<myobject>", -2, "prec_stl/vector", 49,
                  typeid(vector<myobject>), DefineBehavior(ptr, ptr),
                  0, &vectorlEmyobjectgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<myobject>) );
      instance.SetNew(&new_vectorlEmyobjectgR);
      instance.SetNewArray(&newArray_vectorlEmyobjectgR);
      instance.SetDelete(&delete_vectorlEmyobjectgR);
      instance.SetDeleteArray(&deleteArray_vectorlEmyobjectgR);
      instance.SetDestructor(&destruct_vectorlEmyobjectgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<myobject> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<myobject>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEmyobjectgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<myobject>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEmyobjectgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<myobject> : new vector<myobject>;
   }
   static void *newArray_vectorlEmyobjectgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<myobject>[nElements] : new vector<myobject>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEmyobjectgR(void *p) {
      delete ((vector<myobject>*)p);
   }
   static void deleteArray_vectorlEmyobjectgR(void *p) {
      delete [] ((vector<myobject>*)p);
   }
   static void destruct_vectorlEmyobjectgR(void *p) {
      typedef vector<myobject> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<myobject>

/********************************************************
* eventdict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableeventdict();

extern "C" void G__set_cpp_environmenteventdict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Analysis/NtupleProducer/interface/myobject.h");
  G__add_compiledheader("Analysis/NtupleProducer/interface/myevent.h");
  G__cpp_reset_tagtableeventdict();
}
#include <new>
extern "C" int G__cpp_dllreveventdict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* myobject */
static int G__eventdict_209_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   myobject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new myobject[n];
     } else {
       p = new((void*) gvp) myobject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new myobject;
     } else {
       p = new((void*) gvp) myobject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictLN_myobject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_209_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) myobject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_209_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) myobject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_209_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) myobject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_209_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      myobject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_209_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((myobject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_209_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) myobject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_209_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) myobject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_209_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) myobject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_209_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) myobject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__eventdict_209_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   myobject* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new myobject(*(myobject*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictLN_myobject));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef myobject G__Tmyobject;
static int G__eventdict_209_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (myobject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((myobject*) (soff+(sizeof(myobject)*i)))->~G__Tmyobject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (myobject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((myobject*) (soff))->~G__Tmyobject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__eventdict_209_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   myobject* dest = (myobject*) G__getstructoffset();
   *dest = *(myobject*) libp->para[0].ref;
   const myobject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* myGenobject */
static int G__eventdict_446_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   myGenobject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new myGenobject[n];
     } else {
       p = new((void*) gvp) myGenobject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new myGenobject;
     } else {
       p = new((void*) gvp) myGenobject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictLN_myGenobject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_446_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) myGenobject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_446_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) myGenobject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_446_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) myGenobject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_446_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      myGenobject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_446_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((myGenobject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_446_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) myGenobject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_446_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) myGenobject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_446_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) myGenobject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_446_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) myGenobject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__eventdict_446_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   myGenobject* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new myGenobject(*(myGenobject*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictLN_myGenobject));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef myGenobject G__TmyGenobject;
static int G__eventdict_446_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (myGenobject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((myGenobject*) (soff+(sizeof(myGenobject)*i)))->~G__TmyGenobject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (myGenobject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((myGenobject*) (soff))->~G__TmyGenobject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__eventdict_446_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   myGenobject* dest = (myGenobject*) G__getstructoffset();
   *dest = *(myGenobject*) libp->para[0].ref;
   const myGenobject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* myevent */
static int G__eventdict_447_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   myevent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new myevent[n];
     } else {
       p = new((void*) gvp) myevent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new myevent;
     } else {
       p = new((void*) gvp) myevent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictLN_myevent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_447_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) myevent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_447_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) myevent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_447_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) myevent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_447_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      myevent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_447_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((myevent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_447_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) myevent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_447_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) myevent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_447_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) myevent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_447_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) myevent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__eventdict_447_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   myevent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new myevent(*(myevent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictLN_myevent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef myevent G__Tmyevent;
static int G__eventdict_447_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (myevent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((myevent*) (soff+(sizeof(myevent)*i)))->~G__Tmyevent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (myevent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((myevent*) (soff))->~G__Tmyevent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__eventdict_447_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   myevent* dest = (myevent*) G__getstructoffset();
   *dest = *(myevent*) libp->para[0].ref;
   const myevent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<myobject,allocator<myobject> > */
static int G__eventdict_449_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myobject,allocator<myobject> >::reference obj = ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->at((vector<myobject,allocator<myobject> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<myobject,allocator<myobject> >::const_reference obj = ((const vector<myobject,allocator<myobject> >*) G__getstructoffset())->at((vector<myobject,allocator<myobject> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<myobject,allocator<myobject> >::iterator* pobj;
         vector<myobject,allocator<myobject> >::iterator xobj = ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->begin();
         pobj = new vector<myobject,allocator<myobject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<myobject,allocator<myobject> >::iterator* pobj;
         vector<myobject,allocator<myobject> >::iterator xobj = ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->end();
         pobj = new vector<myobject,allocator<myobject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<myobject,allocator<myobject> >::reverse_iterator* pobj;
         vector<myobject,allocator<myobject> >::reverse_iterator xobj = ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->rbegin();
         pobj = new vector<myobject,allocator<myobject> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<myobject,allocator<myobject> >::reverse_iterator* pobj;
         vector<myobject,allocator<myobject> >::reverse_iterator xobj = ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->rend();
         pobj = new vector<myobject,allocator<myobject> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<myobject,allocator<myobject> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<myobject,allocator<myobject> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->resize((vector<myobject,allocator<myobject> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->resize((vector<myobject,allocator<myobject> >::size_type) G__int(libp->para[0]), *((myobject*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<myobject,allocator<myobject> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<myobject,allocator<myobject> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myobject,allocator<myobject> >::reference obj = ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->operator[]((vector<myobject,allocator<myobject> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<myobject,allocator<myobject> >::const_reference obj = ((const vector<myobject,allocator<myobject> >*) G__getstructoffset())->operator[]((vector<myobject,allocator<myobject> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<myobject,allocator<myobject> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<myobject,allocator<myobject> >[n];
     } else {
       p = new((void*) gvp) vector<myobject,allocator<myobject> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<myobject,allocator<myobject> >;
     } else {
       p = new((void*) gvp) vector<myobject,allocator<myobject> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<myobject,allocator<myobject> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<myobject,allocator<myobject> >((vector<myobject,allocator<myobject> >::size_type) G__int(libp->para[0]), *(myobject*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<myobject,allocator<myobject> >((vector<myobject,allocator<myobject> >::size_type) G__int(libp->para[0]), *(myobject*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<myobject,allocator<myobject> >((vector<myobject,allocator<myobject> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<myobject,allocator<myobject> >((vector<myobject,allocator<myobject> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<myobject,allocator<myobject> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<myobject,allocator<myobject> >(*(vector<myobject,allocator<myobject> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<myobject,allocator<myobject> >(*(vector<myobject,allocator<myobject> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<myobject,allocator<myobject> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<myobject,allocator<myobject> >(*((vector<myobject,allocator<myobject> >::const_iterator*) G__int(libp->para[0])), *((vector<myobject,allocator<myobject> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<myobject,allocator<myobject> >(*((vector<myobject,allocator<myobject> >::const_iterator*) G__int(libp->para[0])), *((vector<myobject,allocator<myobject> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myobject,allocator<myobject> >& obj = ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->operator=(*(vector<myobject,allocator<myobject> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->reserve((vector<myobject,allocator<myobject> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const myobject& obj = ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const myobject& obj = ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->push_back(*(myobject*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->swap(*(vector<myobject,allocator<myobject> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<myobject,allocator<myobject> >::iterator* pobj;
         vector<myobject,allocator<myobject> >::iterator xobj = ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->insert(*((vector<myobject,allocator<myobject> >::iterator*) G__int(libp->para[0])), *(myobject*) libp->para[1].ref);
         pobj = new vector<myobject,allocator<myobject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->insert(*((vector<myobject,allocator<myobject> >::iterator*) G__int(libp->para[0])), *((vector<myobject,allocator<myobject> >::const_iterator*) G__int(libp->para[1]))
, *((vector<myobject,allocator<myobject> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->insert(*((vector<myobject,allocator<myobject> >::iterator*) G__int(libp->para[0])), (vector<myobject,allocator<myobject> >::size_type) G__int(libp->para[1])
, *(myobject*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->erase(*((vector<myobject,allocator<myobject> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->erase(*((vector<myobject,allocator<myobject> >::iterator*) G__int(libp->para[0])), *((vector<myobject,allocator<myobject> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_449_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myobject,allocator<myobject> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<myobject,allocator<myobject> > G__TvectorlEmyobjectcOallocatorlEmyobjectgRsPgR;
static int G__eventdict_449_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<myobject,allocator<myobject> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<myobject,allocator<myobject> >*) (soff+(sizeof(vector<myobject,allocator<myobject> >)*i)))->~G__TvectorlEmyobjectcOallocatorlEmyobjectgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<myobject,allocator<myobject> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<myobject,allocator<myobject> >*) (soff))->~G__TvectorlEmyobjectcOallocatorlEmyobjectgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<myobject,allocator<myobject> >::iterator */
static int G__eventdict_450_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<myobject,allocator<myobject> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<myobject,allocator<myobject> >::iterator[n];
     } else {
       p = new((void*) gvp) vector<myobject,allocator<myobject> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<myobject,allocator<myobject> >::iterator;
     } else {
       p = new((void*) gvp) vector<myobject,allocator<myobject> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_450_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<myobject,allocator<myobject> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<myobject,allocator<myobject> >::iterator(libp->para[0].ref ? *(const vector<myobject,allocator<myobject> >::iterator::pointer*) libp->para[0].ref : *(const vector<myobject,allocator<myobject> >::iterator::pointer*) (void*) (&G__Mlong(libp->para[0])));
   } else {
     p = new((void*) gvp) vector<myobject,allocator<myobject> >::iterator(libp->para[0].ref ? *(const vector<myobject,allocator<myobject> >::iterator::pointer*) libp->para[0].ref : *(const vector<myobject,allocator<myobject> >::iterator::pointer*) (void*) (&G__Mlong(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_450_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myobject,allocator<myobject> >::iterator::reference obj = ((const vector<myobject,allocator<myobject> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_450_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const vector<myobject,allocator<myobject> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_450_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myobject,allocator<myobject> >::iterator& obj = ((vector<myobject,allocator<myobject> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_450_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<myobject,allocator<myobject> >::iterator* pobj;
         vector<myobject,allocator<myobject> >::iterator xobj = ((vector<myobject,allocator<myobject> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new vector<myobject,allocator<myobject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_450_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myobject,allocator<myobject> >::iterator& obj = ((vector<myobject,allocator<myobject> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_450_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<myobject,allocator<myobject> >::iterator* pobj;
         vector<myobject,allocator<myobject> >::iterator xobj = ((vector<myobject,allocator<myobject> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new vector<myobject,allocator<myobject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_450_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myobject,allocator<myobject> >::iterator::reference obj = ((const vector<myobject,allocator<myobject> >::iterator*) G__getstructoffset())->operator[](*(vector<myobject,allocator<myobject> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_450_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myobject,allocator<myobject> >::iterator& obj = ((vector<myobject,allocator<myobject> >::iterator*) G__getstructoffset())->operator+=(*(vector<myobject,allocator<myobject> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_450_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myobject,allocator<myobject> >::iterator* pobj;
         const vector<myobject,allocator<myobject> >::iterator xobj = ((const vector<myobject,allocator<myobject> >::iterator*) G__getstructoffset())->operator+(*(vector<myobject,allocator<myobject> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<myobject,allocator<myobject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_450_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myobject,allocator<myobject> >::iterator& obj = ((vector<myobject,allocator<myobject> >::iterator*) G__getstructoffset())->operator-=(*(vector<myobject,allocator<myobject> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_450_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myobject,allocator<myobject> >::iterator* pobj;
         const vector<myobject,allocator<myobject> >::iterator xobj = ((const vector<myobject,allocator<myobject> >::iterator*) G__getstructoffset())->operator-(*(vector<myobject,allocator<myobject> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<myobject,allocator<myobject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_450_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myobject,allocator<myobject> >::iterator::pointer& obj = ((const vector<myobject,allocator<myobject> >::iterator*) G__getstructoffset())->base();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_450_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<myobject,allocator<myobject> >::iterator* pobj;
         vector<myobject,allocator<myobject> >::iterator xobj = ((vector<myobject,allocator<myobject> >::iterator*) G__getstructoffset())->operator=(*(vector<myobject,allocator<myobject> >::iterator*) libp->para[0].ref);
         pobj = new vector<myobject,allocator<myobject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__eventdict_450_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vector<myobject,allocator<myobject> >::iterator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vector<myobject,allocator<myobject> >::iterator(*(vector<myobject,allocator<myobject> >::iterator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<myobject,allocator<myobject> >::iterator G__TvectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator;
static int G__eventdict_450_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<myobject,allocator<myobject> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<myobject,allocator<myobject> >::iterator*) (soff+(sizeof(vector<myobject,allocator<myobject> >::iterator)*i)))->~G__TvectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<myobject,allocator<myobject> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<myobject,allocator<myobject> >::iterator*) (soff))->~G__TvectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<myGenobject,allocator<myGenobject> > */
static int G__eventdict_453_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myGenobject,allocator<myGenobject> >::reference obj = ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->at((vector<myGenobject,allocator<myGenobject> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<myGenobject,allocator<myGenobject> >::const_reference obj = ((const vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->at((vector<myGenobject,allocator<myGenobject> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<myGenobject,allocator<myGenobject> >::iterator* pobj;
         vector<myGenobject,allocator<myGenobject> >::iterator xobj = ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->begin();
         pobj = new vector<myGenobject,allocator<myGenobject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<myGenobject,allocator<myGenobject> >::iterator* pobj;
         vector<myGenobject,allocator<myGenobject> >::iterator xobj = ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->end();
         pobj = new vector<myGenobject,allocator<myGenobject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<myGenobject,allocator<myGenobject> >::reverse_iterator* pobj;
         vector<myGenobject,allocator<myGenobject> >::reverse_iterator xobj = ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->rbegin();
         pobj = new vector<myGenobject,allocator<myGenobject> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<myGenobject,allocator<myGenobject> >::reverse_iterator* pobj;
         vector<myGenobject,allocator<myGenobject> >::reverse_iterator xobj = ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->rend();
         pobj = new vector<myGenobject,allocator<myGenobject> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->resize((vector<myGenobject,allocator<myGenobject> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->resize((vector<myGenobject,allocator<myGenobject> >::size_type) G__int(libp->para[0]), *((myGenobject*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myGenobject,allocator<myGenobject> >::reference obj = ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->operator[]((vector<myGenobject,allocator<myGenobject> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<myGenobject,allocator<myGenobject> >::const_reference obj = ((const vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->operator[]((vector<myGenobject,allocator<myGenobject> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<myGenobject,allocator<myGenobject> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<myGenobject,allocator<myGenobject> >[n];
     } else {
       p = new((void*) gvp) vector<myGenobject,allocator<myGenobject> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<myGenobject,allocator<myGenobject> >;
     } else {
       p = new((void*) gvp) vector<myGenobject,allocator<myGenobject> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<myGenobject,allocator<myGenobject> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<myGenobject,allocator<myGenobject> >((vector<myGenobject,allocator<myGenobject> >::size_type) G__int(libp->para[0]), *(myGenobject*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<myGenobject,allocator<myGenobject> >((vector<myGenobject,allocator<myGenobject> >::size_type) G__int(libp->para[0]), *(myGenobject*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<myGenobject,allocator<myGenobject> >((vector<myGenobject,allocator<myGenobject> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<myGenobject,allocator<myGenobject> >((vector<myGenobject,allocator<myGenobject> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<myGenobject,allocator<myGenobject> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<myGenobject,allocator<myGenobject> >(*(vector<myGenobject,allocator<myGenobject> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<myGenobject,allocator<myGenobject> >(*(vector<myGenobject,allocator<myGenobject> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<myGenobject,allocator<myGenobject> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<myGenobject,allocator<myGenobject> >(*((vector<myGenobject,allocator<myGenobject> >::const_iterator*) G__int(libp->para[0])), *((vector<myGenobject,allocator<myGenobject> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<myGenobject,allocator<myGenobject> >(*((vector<myGenobject,allocator<myGenobject> >::const_iterator*) G__int(libp->para[0])), *((vector<myGenobject,allocator<myGenobject> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myGenobject,allocator<myGenobject> >& obj = ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->operator=(*(vector<myGenobject,allocator<myGenobject> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->reserve((vector<myGenobject,allocator<myGenobject> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const myGenobject& obj = ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const myGenobject& obj = ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->push_back(*(myGenobject*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->swap(*(vector<myGenobject,allocator<myGenobject> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<myGenobject,allocator<myGenobject> >::iterator* pobj;
         vector<myGenobject,allocator<myGenobject> >::iterator xobj = ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->insert(*((vector<myGenobject,allocator<myGenobject> >::iterator*) G__int(libp->para[0])), *(myGenobject*) libp->para[1].ref);
         pobj = new vector<myGenobject,allocator<myGenobject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->insert(*((vector<myGenobject,allocator<myGenobject> >::iterator*) G__int(libp->para[0])), *((vector<myGenobject,allocator<myGenobject> >::const_iterator*) G__int(libp->para[1]))
, *((vector<myGenobject,allocator<myGenobject> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->insert(*((vector<myGenobject,allocator<myGenobject> >::iterator*) G__int(libp->para[0])), (vector<myGenobject,allocator<myGenobject> >::size_type) G__int(libp->para[1])
, *(myGenobject*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->erase(*((vector<myGenobject,allocator<myGenobject> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->erase(*((vector<myGenobject,allocator<myGenobject> >::iterator*) G__int(libp->para[0])), *((vector<myGenobject,allocator<myGenobject> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_453_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<myGenobject,allocator<myGenobject> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<myGenobject,allocator<myGenobject> > G__TvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR;
static int G__eventdict_453_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<myGenobject,allocator<myGenobject> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<myGenobject,allocator<myGenobject> >*) (soff+(sizeof(vector<myGenobject,allocator<myGenobject> >)*i)))->~G__TvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<myGenobject,allocator<myGenobject> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<myGenobject,allocator<myGenobject> >*) (soff))->~G__TvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<myGenobject,allocator<myGenobject> >::iterator */
static int G__eventdict_454_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<myGenobject,allocator<myGenobject> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<myGenobject,allocator<myGenobject> >::iterator[n];
     } else {
       p = new((void*) gvp) vector<myGenobject,allocator<myGenobject> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<myGenobject,allocator<myGenobject> >::iterator;
     } else {
       p = new((void*) gvp) vector<myGenobject,allocator<myGenobject> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_454_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<myGenobject,allocator<myGenobject> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<myGenobject,allocator<myGenobject> >::iterator(libp->para[0].ref ? *(const vector<myGenobject,allocator<myGenobject> >::iterator::pointer*) libp->para[0].ref : *(const vector<myGenobject,allocator<myGenobject> >::iterator::pointer*) (void*) (&G__Mlong(libp->para[0])));
   } else {
     p = new((void*) gvp) vector<myGenobject,allocator<myGenobject> >::iterator(libp->para[0].ref ? *(const vector<myGenobject,allocator<myGenobject> >::iterator::pointer*) libp->para[0].ref : *(const vector<myGenobject,allocator<myGenobject> >::iterator::pointer*) (void*) (&G__Mlong(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_454_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myGenobject,allocator<myGenobject> >::iterator::reference obj = ((const vector<myGenobject,allocator<myGenobject> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_454_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const vector<myGenobject,allocator<myGenobject> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_454_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myGenobject,allocator<myGenobject> >::iterator& obj = ((vector<myGenobject,allocator<myGenobject> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_454_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<myGenobject,allocator<myGenobject> >::iterator* pobj;
         vector<myGenobject,allocator<myGenobject> >::iterator xobj = ((vector<myGenobject,allocator<myGenobject> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new vector<myGenobject,allocator<myGenobject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_454_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myGenobject,allocator<myGenobject> >::iterator& obj = ((vector<myGenobject,allocator<myGenobject> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_454_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<myGenobject,allocator<myGenobject> >::iterator* pobj;
         vector<myGenobject,allocator<myGenobject> >::iterator xobj = ((vector<myGenobject,allocator<myGenobject> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new vector<myGenobject,allocator<myGenobject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_454_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myGenobject,allocator<myGenobject> >::iterator::reference obj = ((const vector<myGenobject,allocator<myGenobject> >::iterator*) G__getstructoffset())->operator[](*(vector<myGenobject,allocator<myGenobject> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_454_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myGenobject,allocator<myGenobject> >::iterator& obj = ((vector<myGenobject,allocator<myGenobject> >::iterator*) G__getstructoffset())->operator+=(*(vector<myGenobject,allocator<myGenobject> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_454_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myGenobject,allocator<myGenobject> >::iterator* pobj;
         const vector<myGenobject,allocator<myGenobject> >::iterator xobj = ((const vector<myGenobject,allocator<myGenobject> >::iterator*) G__getstructoffset())->operator+(*(vector<myGenobject,allocator<myGenobject> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<myGenobject,allocator<myGenobject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_454_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myGenobject,allocator<myGenobject> >::iterator& obj = ((vector<myGenobject,allocator<myGenobject> >::iterator*) G__getstructoffset())->operator-=(*(vector<myGenobject,allocator<myGenobject> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_454_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myGenobject,allocator<myGenobject> >::iterator* pobj;
         const vector<myGenobject,allocator<myGenobject> >::iterator xobj = ((const vector<myGenobject,allocator<myGenobject> >::iterator*) G__getstructoffset())->operator-(*(vector<myGenobject,allocator<myGenobject> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<myGenobject,allocator<myGenobject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_454_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myGenobject,allocator<myGenobject> >::iterator::pointer& obj = ((const vector<myGenobject,allocator<myGenobject> >::iterator*) G__getstructoffset())->base();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict_454_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<myGenobject,allocator<myGenobject> >::iterator* pobj;
         vector<myGenobject,allocator<myGenobject> >::iterator xobj = ((vector<myGenobject,allocator<myGenobject> >::iterator*) G__getstructoffset())->operator=(*(vector<myGenobject,allocator<myGenobject> >::iterator*) libp->para[0].ref);
         pobj = new vector<myGenobject,allocator<myGenobject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__eventdict_454_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vector<myGenobject,allocator<myGenobject> >::iterator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vector<myGenobject,allocator<myGenobject> >::iterator(*(vector<myGenobject,allocator<myGenobject> >::iterator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<myGenobject,allocator<myGenobject> >::iterator G__TvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator;
static int G__eventdict_454_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<myGenobject,allocator<myGenobject> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<myGenobject,allocator<myGenobject> >::iterator*) (soff+(sizeof(vector<myGenobject,allocator<myGenobject> >::iterator)*i)))->~G__TvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<myGenobject,allocator<myGenobject> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<myGenobject,allocator<myGenobject> >::iterator*) (soff))->~G__TvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__eventdict__0_1744(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<myobject,allocator<myobject> >::iterator*) libp->para[0].ref, *(vector<myobject,allocator<myobject> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict__0_1745(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<myobject,allocator<myobject> >::iterator*) libp->para[0].ref, *(vector<myobject,allocator<myobject> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict__0_1746(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<myobject,allocator<myobject> >::iterator*) libp->para[0].ref, *(vector<myobject,allocator<myobject> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict__0_1747(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<myobject,allocator<myobject> >::iterator*) libp->para[0].ref, *(vector<myobject,allocator<myobject> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict__0_1748(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<myobject,allocator<myobject> >::iterator*) libp->para[0].ref, *(vector<myobject,allocator<myobject> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict__0_1749(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<myobject,allocator<myobject> >::iterator*) libp->para[0].ref, *(vector<myobject,allocator<myobject> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict__0_1750(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) operator-(*(vector<myobject,allocator<myobject> >::iterator*) libp->para[0].ref, *(vector<myobject,allocator<myobject> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict__0_1751(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myobject,allocator<myobject> >::iterator* pobj;
         const vector<myobject,allocator<myobject> >::iterator xobj = operator+((const vector<myobject,allocator<myobject> >::iterator::difference_type) G__int(libp->para[0]), *(vector<myobject,allocator<myobject> >::iterator*) libp->para[1].ref);
         pobj = new vector<myobject,allocator<myobject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict__0_1812(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<myGenobject,allocator<myGenobject> >::iterator*) libp->para[0].ref, *(vector<myGenobject,allocator<myGenobject> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict__0_1813(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<myGenobject,allocator<myGenobject> >::iterator*) libp->para[0].ref, *(vector<myGenobject,allocator<myGenobject> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict__0_1814(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<myGenobject,allocator<myGenobject> >::iterator*) libp->para[0].ref, *(vector<myGenobject,allocator<myGenobject> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict__0_1815(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<myGenobject,allocator<myGenobject> >::iterator*) libp->para[0].ref, *(vector<myGenobject,allocator<myGenobject> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict__0_1816(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<myGenobject,allocator<myGenobject> >::iterator*) libp->para[0].ref, *(vector<myGenobject,allocator<myGenobject> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict__0_1817(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<myGenobject,allocator<myGenobject> >::iterator*) libp->para[0].ref, *(vector<myGenobject,allocator<myGenobject> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict__0_1818(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) operator-(*(vector<myGenobject,allocator<myGenobject> >::iterator*) libp->para[0].ref, *(vector<myGenobject,allocator<myGenobject> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdict__0_1819(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<myGenobject,allocator<myGenobject> >::iterator* pobj;
         const vector<myGenobject,allocator<myGenobject> >::iterator xobj = operator+((const vector<myGenobject,allocator<myGenobject> >::iterator::difference_type) G__int(libp->para[0]), *(vector<myGenobject,allocator<myGenobject> >::iterator*) libp->para[1].ref);
         pobj = new vector<myGenobject,allocator<myGenobject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* myobject */

/* myGenobject */

/* myevent */

/* vector<myobject,allocator<myobject> > */

/* vector<myobject,allocator<myobject> >::iterator */

/* vector<myGenobject,allocator<myGenobject> > */

/* vector<myGenobject,allocator<myGenobject> >::iterator */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunceventdict {
 public:
  G__Sizep2memfunceventdict(): p(&G__Sizep2memfunceventdict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunceventdict::*p)();
};

size_t G__get_sizep2memfunceventdict()
{
  G__Sizep2memfunceventdict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceeventdict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__eventdictLN_myobject))) {
     myobject *G__Lderived;
     G__Lderived=(myobject*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__eventdictLN_myobject),G__get_linked_tagnum(&G__eventdictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__eventdictLN_myGenobject))) {
     myGenobject *G__Lderived;
     G__Lderived=(myGenobject*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__eventdictLN_myGenobject),G__get_linked_tagnum(&G__eventdictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__eventdictLN_myevent))) {
     myevent *G__Lderived;
     G__Lderived=(myevent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__eventdictLN_myevent),G__get_linked_tagnum(&G__eventdictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableeventdict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__eventdictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__eventdictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__eventdictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__eventdictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__eventdictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__eventdictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__eventdictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__eventdictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__eventdictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__eventdictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<myobject>",117,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__eventdictLN_myobject),0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__eventdictLN_myobject),0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__eventdictLN_myobject),256,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__eventdictLN_myobject),1,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__eventdictLN_myobject),257,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__eventdictLN_myobject),0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__eventdictLN_myobject),0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__eventdictLN_myobject),1,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__eventdictLN_myobject),1,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__eventdictLN_reverse_iteratorlEvectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__eventdictLN_reverse_iteratorlEvectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__eventdictLN_reverse_iteratorlEvectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__eventdictLN_reverse_iteratorlEvectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<myGenobject>",117,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__eventdictLN_myGenobject),0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__eventdictLN_myGenobject),0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__eventdictLN_myGenobject),256,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__eventdictLN_myGenobject),1,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__eventdictLN_myGenobject),257,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__eventdictLN_myGenobject),0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__eventdictLN_myGenobject),0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__eventdictLN_myGenobject),1,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__eventdictLN_myGenobject),1,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__eventdictLN_reverse_iteratorlEvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__eventdictLN_reverse_iteratorlEvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__eventdictLN_reverse_iteratorlEvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__eventdictLN_reverse_iteratorlEvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* myobject */
static void G__setup_memvarmyobject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventdictLN_myobject));
   { myobject *p; p=(myobject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),102,0,0,-1,-1,-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),102,0,0,-1,-1,-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->px)-(long)(p)),102,0,0,-1,-1,-1,1,"px=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->py)-(long)(p)),102,0,0,-1,-1,-1,1,"py=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),102,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->charge)-(long)(p)),102,0,0,-1,-1,-1,1,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E)-(long)(p)),102,0,0,-1,-1,-1,1,"E=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->et)-(long)(p)),102,0,0,-1,-1,-1,1,"et=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pz)-(long)(p)),102,0,0,-1,-1,-1,1,"pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),102,0,0,-1,-1,-1,1,"z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mass)-(long)(p)),102,0,0,-1,-1,-1,1,"mass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dz_Ver_match)-(long)(p)),102,0,0,-1,-1,-1,1,"dz_Ver_match=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Energy)-(long)(p)),102,0,0,-1,-1,-1,1,"Energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mt)-(long)(p)),102,0,0,-1,-1,-1,1,"mt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jetMass)-(long)(p)),102,0,0,-1,-1,-1,1,"jetMass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta_SC)-(long)(p)),102,0,0,-1,-1,-1,1,"eta_SC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mod_pt)-(long)(p)),102,0,0,-1,-1,-1,1,"mod_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mod_eta)-(long)(p)),102,0,0,-1,-1,-1,1,"mod_eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mod_phi)-(long)(p)),102,0,0,-1,-1,-1,1,"mod_phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mod_charge)-(long)(p)),102,0,0,-1,-1,-1,1,"mod_charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mod_z)-(long)(p)),102,0,0,-1,-1,-1,1,"mod_z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mod_mass)-(long)(p)),102,0,0,-1,-1,-1,1,"mod_mass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Gmod_pt)-(long)(p)),102,0,0,-1,-1,-1,1,"Gmod_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Gmod_eta)-(long)(p)),102,0,0,-1,-1,-1,1,"Gmod_eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Gmod_phi)-(long)(p)),102,0,0,-1,-1,-1,1,"Gmod_phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Gmod_charge)-(long)(p)),102,0,0,-1,-1,-1,1,"Gmod_charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Gmod_z)-(long)(p)),102,0,0,-1,-1,-1,1,"Gmod_z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Gmod_mass)-(long)(p)),102,0,0,-1,-1,-1,1,"Gmod_mass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pfIsoAll)-(long)(p)),102,0,0,-1,-1,-1,1,"pfIsoAll=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pfIsoCharged)-(long)(p)),102,0,0,-1,-1,-1,1,"pfIsoCharged=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pfIsoNeutral)-(long)(p)),102,0,0,-1,-1,-1,1,"pfIsoNeutral=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pfIsoGamma)-(long)(p)),102,0,0,-1,-1,-1,1,"pfIsoGamma=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pfIsoPU)-(long)(p)),102,0,0,-1,-1,-1,1,"pfIsoPU=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pfIsoPULow)-(long)(p)),102,0,0,-1,-1,-1,1,"pfIsoPULow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Id_mvaTrg)-(long)(p)),102,0,0,-1,-1,-1,1,"Id_mvaTrg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Id_mvaNonTrg)-(long)(p)),102,0,0,-1,-1,-1,1,"Id_mvaNonTrg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pfIsoAll_NoPFId)-(long)(p)),102,0,0,-1,-1,-1,1,"pfIsoAll_NoPFId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pfIsoCharged_NoPFId)-(long)(p)),102,0,0,-1,-1,-1,1,"pfIsoCharged_NoPFId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pfIsoNeutral_NoPFId)-(long)(p)),102,0,0,-1,-1,-1,1,"pfIsoNeutral_NoPFId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pfIsoGamma_NoPFId)-(long)(p)),102,0,0,-1,-1,-1,1,"pfIsoGamma_NoPFId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pfIsoPU_NoPFId)-(long)(p)),102,0,0,-1,-1,-1,1,"pfIsoPU_NoPFId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z_expo)-(long)(p)),102,0,0,-1,-1,-1,1,"z_expo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->position_Rho)-(long)(p)),102,0,0,-1,-1,-1,1,"position_Rho=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->position_rho)-(long)(p)),102,0,0,-1,-1,-1,1,"position_rho=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdgId)-(long)(p)),105,0,0,-1,-1,-1,1,"pdgId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->status)-(long)(p)),105,0,0,-1,-1,-1,1,"status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mod_pdgId)-(long)(p)),105,0,0,-1,-1,-1,1,"mod_pdgId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mod_status)-(long)(p)),105,0,0,-1,-1,-1,1,"mod_status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Gmod_pdgId)-(long)(p)),105,0,0,-1,-1,-1,1,"Gmod_pdgId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Gmod_status)-(long)(p)),105,0,0,-1,-1,-1,1,"Gmod_status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tracksSize)-(long)(p)),105,0,0,-1,-1,-1,1,"tracksSize=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gen_index)-(long)(p)),105,0,0,-1,-1,-1,1,"gen_index=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->decay_mode)-(long)(p)),105,0,0,-1,-1,-1,1,"decay_mode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dB)-(long)(p)),102,0,0,-1,-1,-1,1,"dB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->d0)-(long)(p)),102,0,0,-1,-1,-1,1,"d0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->emfraction)-(long)(p)),102,0,0,-1,-1,-1,1,"emfraction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DepositR03Ecal)-(long)(p)),102,0,0,-1,-1,-1,1,"DepositR03Ecal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DepositR03Hcal)-(long)(p)),102,0,0,-1,-1,-1,1,"DepositR03Hcal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DepositR03TrackerOfficial)-(long)(p)),102,0,0,-1,-1,-1,1,"DepositR03TrackerOfficial=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->alpha)-(long)(p)),102,0,0,-1,-1,-1,1,"alpha=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GlobalMuonPromptTight)-(long)(p)),103,0,0,-1,-1,-1,1,"GlobalMuonPromptTight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TMOneStationLoose)-(long)(p)),103,0,0,-1,-1,-1,1,"TMOneStationLoose=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TM2DCompatibilityLoose)-(long)(p)),103,0,0,-1,-1,-1,1,"TM2DCompatibilityLoose=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isGlobalMuon)-(long)(p)),103,0,0,-1,-1,-1,1,"isGlobalMuon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isTrackerMuon)-(long)(p)),103,0,0,-1,-1,-1,1,"isTrackerMuon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isStandAloneMuon)-(long)(p)),103,0,0,-1,-1,-1,1,"isStandAloneMuon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isPFMuon)-(long)(p)),103,0,0,-1,-1,-1,1,"isPFMuon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numberOfValidMuonHits)-(long)(p)),105,0,0,-1,-1,-1,1,"numberOfValidMuonHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numberOfHits)-(long)(p)),105,0,0,-1,-1,-1,1,"numberOfHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numMatchStation)-(long)(p)),105,0,0,-1,-1,-1,1,"numMatchStation=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numLostHitEle)-(long)(p)),105,0,0,-1,-1,-1,1,"numLostHitEle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numValidHitEle)-(long)(p)),105,0,0,-1,-1,-1,1,"numValidHitEle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numHitEleInner)-(long)(p)),105,0,0,-1,-1,-1,1,"numHitEleInner=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numLostHitEleInner)-(long)(p)),105,0,0,-1,-1,-1,1,"numLostHitEleInner=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->normalizedChi2_innTrk)-(long)(p)),105,0,0,-1,-1,-1,1,"normalizedChi2_innTrk=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numberOfValidMuonHits_innTrk)-(long)(p)),105,0,0,-1,-1,-1,1,"numberOfValidMuonHits_innTrk=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numberOfHits_innTrk)-(long)(p)),105,0,0,-1,-1,-1,1,"numberOfHits_innTrk=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->normalizedChi2)-(long)(p)),102,0,0,-1,-1,-1,1,"normalizedChi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkLayerMeasure)-(long)(p)),105,0,0,-1,-1,-1,1,"trkLayerMeasure=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->intrkLayerMeasure)-(long)(p)),105,0,0,-1,-1,-1,1,"intrkLayerMeasure=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->intrkLayerpixel)-(long)(p)),105,0,0,-1,-1,-1,1,"intrkLayerpixel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dxy_in)-(long)(p)),102,0,0,-1,-1,-1,1,"dxy_in=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dZ_in)-(long)(p)),102,0,0,-1,-1,-1,1,"dZ_in=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dxy_PV)-(long)(p)),102,0,0,-1,-1,-1,1,"dxy_PV=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dz_PV)-(long)(p)),102,0,0,-1,-1,-1,1,"dz_PV=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IP3D)-(long)(p)),102,0,0,-1,-1,-1,1,"IP3D=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isFake)-(long)(p)),103,0,0,-1,-1,-1,1,"isFake=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isValid)-(long)(p)),103,0,0,-1,-1,-1,1,"isValid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ndof)-(long)(p)),102,0,0,-1,-1,-1,1,"ndof=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Num_Vertex)-(long)(p)),104,0,0,-1,-1,-1,1,"Num_Vertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jetId_loose)-(long)(p)),103,0,0,-1,-1,-1,1,"jetId_loose=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jetId_tight)-(long)(p)),103,0,0,-1,-1,-1,1,"jetId_tight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HoverE)-(long)(p)),102,0,0,-1,-1,-1,1,"HoverE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->deltaPhiSuperClusterTrackAtVtx)-(long)(p)),102,0,0,-1,-1,-1,1,"deltaPhiSuperClusterTrackAtVtx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->deltaEtaSuperClusterTrackAtVtx)-(long)(p)),102,0,0,-1,-1,-1,1,"deltaEtaSuperClusterTrackAtVtx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigmaIetaIeta)-(long)(p)),102,0,0,-1,-1,-1,1,"sigmaIetaIeta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigmaEtaEta)-(long)(p)),102,0,0,-1,-1,-1,1,"sigmaEtaEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ecalIso)-(long)(p)),102,0,0,-1,-1,-1,1,"ecalIso=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hcalIso)-(long)(p)),102,0,0,-1,-1,-1,1,"hcalIso=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->caloIso)-(long)(p)),102,0,0,-1,-1,-1,1,"caloIso=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackIso)-(long)(p)),102,0,0,-1,-1,-1,1,"trackIso=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hcalOverEcal)-(long)(p)),102,0,0,-1,-1,-1,1,"hcalOverEcal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SIP)-(long)(p)),102,0,0,-1,-1,-1,1,"SIP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->passConversionVeto)-(long)(p)),103,0,0,-1,-1,-1,1,"passConversionVeto=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rawE_SC)-(long)(p)),102,0,0,-1,-1,-1,1,"rawE_SC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->preshowerE_SC)-(long)(p)),102,0,0,-1,-1,-1,1,"preshowerE_SC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bDiscriminatiors_CSV)-(long)(p)),102,0,0,-1,-1,-1,1,"bDiscriminatiors_CSV=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bDiscriminatiors_JP)-(long)(p)),102,0,0,-1,-1,-1,1,"bDiscriminatiors_JP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bDiscriminatiors_TCHPT)-(long)(p)),102,0,0,-1,-1,-1,1,"bDiscriminatiors_TCHPT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jetPt)-(long)(p)),102,0,0,-1,-1,-1,1,"jetPt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jetEta)-(long)(p)),102,0,0,-1,-1,-1,1,"jetEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jetPhi)-(long)(p)),102,0,0,-1,-1,-1,1,"jetPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->leadChargedParticlePt)-(long)(p)),102,0,0,-1,-1,-1,1,"leadChargedParticlePt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->leadTrackD0)-(long)(p)),102,0,0,-1,-1,-1,1,"leadTrackD0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->puJetIdLoose)-(long)(p)),103,0,0,-1,-1,-1,1,"puJetIdLoose=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->puJetIdMedium)-(long)(p)),103,0,0,-1,-1,-1,1,"puJetIdMedium=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->puJetIdTight)-(long)(p)),103,0,0,-1,-1,-1,1,"puJetIdTight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mva_e_pi)-(long)(p)),102,0,0,-1,-1,-1,1,"mva_e_pi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mva_pi_mu)-(long)(p)),102,0,0,-1,-1,-1,1,"mva_pi_mu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mva_e_mu)-(long)(p)),102,0,0,-1,-1,-1,1,"mva_e_mu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hcalEnergy)-(long)(p)),102,0,0,-1,-1,-1,1,"hcalEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ecalEnergy)-(long)(p)),102,0,0,-1,-1,-1,1,"ecalEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackRefPt)-(long)(p)),102,0,0,-1,-1,-1,1,"trackRefPt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numChargedParticlesSignalCone)-(long)(p)),105,0,0,-1,-1,-1,1,"numChargedParticlesSignalCone=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numNeutralHadronsSignalCone)-(long)(p)),105,0,0,-1,-1,-1,1,"numNeutralHadronsSignalCone=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numPhotonsSignalCone)-(long)(p)),105,0,0,-1,-1,-1,1,"numPhotonsSignalCone=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numParticlesSignalCone)-(long)(p)),105,0,0,-1,-1,-1,1,"numParticlesSignalCone=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->signalPiZeroCandidates)-(long)(p)),105,0,0,-1,-1,-1,1,"signalPiZeroCandidates=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numChargedParticlesIsoCone)-(long)(p)),105,0,0,-1,-1,-1,1,"numChargedParticlesIsoCone=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numNeutralHadronsIsoCone)-(long)(p)),105,0,0,-1,-1,-1,1,"numNeutralHadronsIsoCone=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numPhotonsIsoCone)-(long)(p)),105,0,0,-1,-1,-1,1,"numPhotonsIsoCone=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numParticlesIsoCone)-(long)(p)),105,0,0,-1,-1,-1,1,"numParticlesIsoCone=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptSumChargedParticlesIsoCone)-(long)(p)),102,0,0,-1,-1,-1,1,"ptSumChargedParticlesIsoCone=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptSumPhotonsIsoCone)-(long)(p)),102,0,0,-1,-1,-1,1,"ptSumPhotonsIsoCone=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sig_track1_pt)-(long)(p)),102,0,0,-1,-1,-1,1,"sig_track1_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sig_track1_phi)-(long)(p)),102,0,0,-1,-1,-1,1,"sig_track1_phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sig_track1_eta)-(long)(p)),102,0,0,-1,-1,-1,1,"sig_track1_eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sig_track1_m)-(long)(p)),102,0,0,-1,-1,-1,1,"sig_track1_m=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sig_track2_pt)-(long)(p)),102,0,0,-1,-1,-1,1,"sig_track2_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sig_track2_phi)-(long)(p)),102,0,0,-1,-1,-1,1,"sig_track2_phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sig_track2_eta)-(long)(p)),102,0,0,-1,-1,-1,1,"sig_track2_eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sig_track2_m)-(long)(p)),102,0,0,-1,-1,-1,1,"sig_track2_m=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sig_track3_pt)-(long)(p)),102,0,0,-1,-1,-1,1,"sig_track3_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sig_track3_phi)-(long)(p)),102,0,0,-1,-1,-1,1,"sig_track3_phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sig_track3_eta)-(long)(p)),102,0,0,-1,-1,-1,1,"sig_track3_eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sig_track3_m)-(long)(p)),102,0,0,-1,-1,-1,1,"sig_track3_m=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sig_pi0_1_pt)-(long)(p)),102,0,0,-1,-1,-1,1,"sig_pi0_1_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sig_pi0_1_phi)-(long)(p)),102,0,0,-1,-1,-1,1,"sig_pi0_1_phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sig_pi0_1_eta)-(long)(p)),102,0,0,-1,-1,-1,1,"sig_pi0_1_eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sig_pi0_1_m)-(long)(p)),102,0,0,-1,-1,-1,1,"sig_pi0_1_m=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sig_pi0_2_pt)-(long)(p)),102,0,0,-1,-1,-1,1,"sig_pi0_2_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sig_pi0_2_phi)-(long)(p)),102,0,0,-1,-1,-1,1,"sig_pi0_2_phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sig_pi0_2_eta)-(long)(p)),102,0,0,-1,-1,-1,1,"sig_pi0_2_eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sig_pi0_2_m)-(long)(p)),102,0,0,-1,-1,-1,1,"sig_pi0_2_m=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByDecayModeFinding)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByDecayModeFinding=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByVeryLooseIsolation)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByVeryLooseIsolation=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByLooseIsolation)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByLooseIsolation=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByMediumIsolation)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByMediumIsolation=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByTightIsolation)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByTightIsolation=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByElectronLoose)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByElectronLoose=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByElectronMedium)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByElectronMedium=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByElectronTight)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByElectronTight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByElectronMVA)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByElectronMVA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByElectronMVA2Loose)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByElectronMVA2Loose=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByElectronMVA2Medium)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByElectronMVA2Medium=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByElectronMVA2Tight)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByElectronMVA2Tight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByElectronMVA3Loose)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByElectronMVA3Loose=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByElectronMVA3Medium)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByElectronMVA3Medium=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByElectronMVA3Tight)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByElectronMVA3Tight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByElectronMVA3VTight)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByElectronMVA3VTight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByMuonLoose)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByMuonLoose=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByMuonMedium)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByMuonMedium=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByMuonTight)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByMuonTight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByMuonLoose2)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByMuonLoose2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByMuonMedium2)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByMuonMedium2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByMuonTight2)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByMuonTight2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByMuonLoose3)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByMuonLoose3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discriminationByMuonTight3)-(long)(p)),103,0,0,-1,-1,-1,1,"discriminationByMuonTight3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byVLooseCombinedIsolationDeltaBetaCorr)-(long)(p)),103,0,0,-1,-1,-1,1,"byVLooseCombinedIsolationDeltaBetaCorr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byLooseCombinedIsolationDeltaBetaCorr)-(long)(p)),103,0,0,-1,-1,-1,1,"byLooseCombinedIsolationDeltaBetaCorr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byMediumCombinedIsolationDeltaBetaCorr)-(long)(p)),103,0,0,-1,-1,-1,1,"byMediumCombinedIsolationDeltaBetaCorr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byTightCombinedIsolationDeltaBetaCorr)-(long)(p)),103,0,0,-1,-1,-1,1,"byTightCombinedIsolationDeltaBetaCorr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byLooseCombinedIsolationDeltaBetaCorr3Hits)-(long)(p)),103,0,0,-1,-1,-1,1,"byLooseCombinedIsolationDeltaBetaCorr3Hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byMediumCombinedIsolationDeltaBetaCorr3Hits)-(long)(p)),103,0,0,-1,-1,-1,1,"byMediumCombinedIsolationDeltaBetaCorr3Hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byTightCombinedIsolationDeltaBetaCorr3Hits)-(long)(p)),103,0,0,-1,-1,-1,1,"byTightCombinedIsolationDeltaBetaCorr3Hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byRawCombinedIsolationDeltaBetaCorr3Hits)-(long)(p)),102,0,0,-1,-1,-1,1,"byRawCombinedIsolationDeltaBetaCorr3Hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byIsolationMVAraw)-(long)(p)),102,0,0,-1,-1,-1,1,"byIsolationMVAraw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byIsolationMVA2raw)-(long)(p)),102,0,0,-1,-1,-1,1,"byIsolationMVA2raw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byLooseIsolationMVA)-(long)(p)),103,0,0,-1,-1,-1,1,"byLooseIsolationMVA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byMediumIsolationMVA)-(long)(p)),103,0,0,-1,-1,-1,1,"byMediumIsolationMVA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byTightIsolationMVA)-(long)(p)),103,0,0,-1,-1,-1,1,"byTightIsolationMVA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byLooseIsolationMVA2)-(long)(p)),103,0,0,-1,-1,-1,1,"byLooseIsolationMVA2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byMediumIsolationMVA2)-(long)(p)),103,0,0,-1,-1,-1,1,"byMediumIsolationMVA2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byTightIsolationMVA2)-(long)(p)),103,0,0,-1,-1,-1,1,"byTightIsolationMVA2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hasTrgObject_loose)-(long)(p)),103,0,0,-1,-1,-1,1,"hasTrgObject_loose=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrgObjectEta_loose)-(long)(p)),102,0,0,-1,-1,-1,1,"TrgObjectEta_loose=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrgObjectPt_loose)-(long)(p)),102,0,0,-1,-1,-1,1,"TrgObjectPt_loose=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrgObjectPhi_loose)-(long)(p)),102,0,0,-1,-1,-1,1,"TrgObjectPhi_loose=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hasTrgObject_medium)-(long)(p)),103,0,0,-1,-1,-1,1,"hasTrgObject_medium=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrgObjectEta_medium)-(long)(p)),102,0,0,-1,-1,-1,1,"TrgObjectEta_medium=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrgObjectPt_medium)-(long)(p)),102,0,0,-1,-1,-1,1,"TrgObjectPt_medium=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrgObjectPhi_medium)-(long)(p)),102,0,0,-1,-1,-1,1,"TrgObjectPhi_medium=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__eventdictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* myGenobject */
static void G__setup_memvarmyGenobject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventdictLN_myGenobject));
   { myGenobject *p; p=(myGenobject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),102,0,0,-1,-1,-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),102,0,0,-1,-1,-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),102,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->charge)-(long)(p)),102,0,0,-1,-1,-1,1,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),102,0,0,-1,-1,-1,1,"z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mass)-(long)(p)),102,0,0,-1,-1,-1,1,"mass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->et)-(long)(p)),102,0,0,-1,-1,-1,1,"et=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mod_pt)-(long)(p)),102,0,0,-1,-1,-1,1,"mod_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mod_eta)-(long)(p)),102,0,0,-1,-1,-1,1,"mod_eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mod_phi)-(long)(p)),102,0,0,-1,-1,-1,1,"mod_phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mod_charge)-(long)(p)),102,0,0,-1,-1,-1,1,"mod_charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mod_z)-(long)(p)),102,0,0,-1,-1,-1,1,"mod_z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mod_mass)-(long)(p)),102,0,0,-1,-1,-1,1,"mod_mass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Gmod_pt)-(long)(p)),102,0,0,-1,-1,-1,1,"Gmod_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Gmod_eta)-(long)(p)),102,0,0,-1,-1,-1,1,"Gmod_eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Gmod_phi)-(long)(p)),102,0,0,-1,-1,-1,1,"Gmod_phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Gmod_charge)-(long)(p)),102,0,0,-1,-1,-1,1,"Gmod_charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Gmod_z)-(long)(p)),102,0,0,-1,-1,-1,1,"Gmod_z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Gmod_mass)-(long)(p)),102,0,0,-1,-1,-1,1,"Gmod_mass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdgId)-(long)(p)),105,0,0,-1,-1,-1,1,"pdgId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->status)-(long)(p)),105,0,0,-1,-1,-1,1,"status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mod_pdgId)-(long)(p)),105,0,0,-1,-1,-1,1,"mod_pdgId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mod_status)-(long)(p)),105,0,0,-1,-1,-1,1,"mod_status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Gmod_pdgId)-(long)(p)),105,0,0,-1,-1,-1,1,"Gmod_pdgId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Gmod_status)-(long)(p)),105,0,0,-1,-1,-1,1,"Gmod_status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gen_index)-(long)(p)),105,0,0,-1,-1,-1,1,"gen_index=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->decay_mode)-(long)(p)),105,0,0,-1,-1,-1,1,"decay_mode=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__eventdictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* myevent */
static void G__setup_memvarmyevent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventdictLN_myevent));
   { myevent *p; p=(myevent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->RecPFJetsAK5)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RecPFJetsAK5=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecPFJetsAK5_Up_SubTotal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RecPFJetsAK5_Up_SubTotal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecPFJetsAK5_Down_SubTotal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RecPFJetsAK5_Down_SubTotal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecPFJetsAK5_Up_Total)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RecPFJetsAK5_Up_Total=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecPFJetsAK5_Down_Total)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RecPFJetsAK5_Down_Total=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecGenParticle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR),G__defined_typename("vector<myGenobject>"),-1,1,"RecGenParticle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecGenMet)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR),G__defined_typename("vector<myGenobject>"),-1,1,"RecGenMet=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecGenJet)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR),G__defined_typename("vector<myGenobject>"),-1,1,"RecGenJet=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecGenTauVisible)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR),G__defined_typename("vector<myGenobject>"),-1,1,"RecGenTauVisible=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PreSelectedElectrons)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"PreSelectedElectrons=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PreSelectedMuons)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"PreSelectedMuons=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PreSelectedHPSTaus)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"PreSelectedHPSTaus=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SelectedHPSTaus)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"SelectedHPSTaus=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecPFMet)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RecPFMet=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecPFMetCor)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RecPFMetCor=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecMVAMet)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RecMVAMet=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RectcMet)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RectcMet=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecPFMetCorElectronEnUp)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RecPFMetCorElectronEnUp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecPFMetCorElectronEnDown)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RecPFMetCorElectronEnDown=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecPFMetCorMuonEnUp)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RecPFMetCorMuonEnUp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecPFMetCorMuonEnDown)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RecPFMetCorMuonEnDown=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecPFMetCorTauEnUp)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RecPFMetCorTauEnUp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecPFMetCorTauEnDown)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RecPFMetCorTauEnDown=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecPFMetCorJetEnUp)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RecPFMetCorJetEnUp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecPFMetCorJetEnDown)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RecPFMetCorJetEnDown=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecPFMetCorJetResUp)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RecPFMetCorJetResUp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecPFMetCorJetResDown)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RecPFMetCorJetResDown=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecPFMetCorUnclusteredEnUp)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RecPFMetCorUnclusteredEnUp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecPFMetCorUnclusteredEnDown)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"RecPFMetCorUnclusteredEnDown=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->smearedPatJets)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"smearedPatJets=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->smearedPatJetsResUp)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"smearedPatJetsResUp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->smearedPatJetsResDown)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"smearedPatJetsResDown=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->shiftedPatJetsEnUpForCorrMEt)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"shiftedPatJetsEnUpForCorrMEt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->shiftedPatJetsEnDownForCorrMEt)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"shiftedPatJetsEnDownForCorrMEt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cleanPatJets)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"cleanPatJets=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),G__defined_typename("vector<myobject>"),-1,1,"Vertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HLT)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<string,int>"),-1,1,"HLT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->runNumber)-(long)(p)),104,0,0,-1,-1,-1,1,"runNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eventNumber)-(long)(p)),104,0,0,-1,-1,-1,1,"eventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lumiNumber)-(long)(p)),104,0,0,-1,-1,-1,1,"lumiNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HLT_DiElectron)-(long)(p)),104,0,0,-1,-1,-1,1,"HLT_DiElectron=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HLT_DiMuon)-(long)(p)),104,0,0,-1,-1,-1,1,"HLT_DiMuon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PUInfo)-(long)(p)),105,0,0,-1,-1,-1,1,"PUInfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PUInfo_true)-(long)(p)),105,0,0,-1,-1,-1,1,"PUInfo_true=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PUInfo_Bunch0)-(long)(p)),105,0,0,-1,-1,-1,1,"PUInfo_Bunch0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RhoCorr)-(long)(p)),102,0,0,-1,-1,-1,1,"RhoCorr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RhoCenNeutral)-(long)(p)),102,0,0,-1,-1,-1,1,"RhoCenNeutral=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RhoCenCharged)-(long)(p)),102,0,0,-1,-1,-1,1,"RhoCenCharged=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RhoCenNeutralTight)-(long)(p)),102,0,0,-1,-1,-1,1,"RhoCenNeutralTight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Rho)-(long)(p)),102,0,0,-1,-1,-1,1,"Rho=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MET_sigMatrix_00)-(long)(p)),102,0,0,-1,-1,-1,1,"MET_sigMatrix_00=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MET_sigMatrix_01)-(long)(p)),102,0,0,-1,-1,-1,1,"MET_sigMatrix_01=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MET_sigMatrix_10)-(long)(p)),102,0,0,-1,-1,-1,1,"MET_sigMatrix_10=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MET_sigMatrix_11)-(long)(p)),102,0,0,-1,-1,-1,1,"MET_sigMatrix_11=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MVAMet_sigMatrix_00)-(long)(p)),102,0,0,-1,-1,-1,1,"MVAMet_sigMatrix_00=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MVAMet_sigMatrix_01)-(long)(p)),102,0,0,-1,-1,-1,1,"MVAMet_sigMatrix_01=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MVAMet_sigMatrix_10)-(long)(p)),102,0,0,-1,-1,-1,1,"MVAMet_sigMatrix_10=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MVAMet_sigMatrix_11)-(long)(p)),102,0,0,-1,-1,-1,1,"MVAMet_sigMatrix_11=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->alphaQCD)-(long)(p)),100,0,0,-1,-1,-1,1,"alphaQCD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->alphaQED)-(long)(p)),100,0,0,-1,-1,-1,1,"alphaQED=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->qScale)-(long)(p)),100,0,0,-1,-1,-1,1,"qScale=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->weight)-(long)(p)),100,0,0,-1,-1,-1,1,"weight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hasPDF)-(long)(p)),103,0,0,-1,-1,-1,1,"hasPDF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hasBinningValues)-(long)(p)),103,0,0,-1,-1,-1,1,"hasBinningValues=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->signalProcessID)-(long)(p)),104,0,0,-1,-1,-1,1,"signalProcessID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->id_First)-(long)(p)),105,0,0,-1,-1,-1,1,"id_First=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->id_Second)-(long)(p)),105,0,0,-1,-1,-1,1,"id_Second=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scalePDF)-(long)(p)),100,0,0,-1,-1,-1,1,"scalePDF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x_First)-(long)(p)),100,0,0,-1,-1,-1,1,"x_First=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x_Second)-(long)(p)),100,0,0,-1,-1,-1,1,"x_Second=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xPDF_First)-(long)(p)),100,0,0,-1,-1,-1,1,"xPDF_First=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xPDF_Second)-(long)(p)),100,0,0,-1,-1,-1,1,"xPDF_Second=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->binningValueSize)-(long)(p)),105,0,0,-1,-1,-1,1,"binningValueSize=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->binningValue0)-(long)(p)),100,0,0,-1,-1,-1,1,"binningValue0=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__eventdictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<myobject,allocator<myobject> > */
static void G__setup_memvarvectorlEmyobjectcOallocatorlEmyobjectgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR));
   { vector<myobject,allocator<myobject> > *p; p=(vector<myobject,allocator<myobject> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<myobject,allocator<myobject> >::iterator */
static void G__setup_memvarvectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator));
   { vector<myobject,allocator<myobject> >::iterator *p; p=(vector<myobject,allocator<myobject> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<myGenobject,allocator<myGenobject> > */
static void G__setup_memvarvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR));
   { vector<myGenobject,allocator<myGenobject> > *p; p=(vector<myGenobject,allocator<myGenobject> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<myGenobject,allocator<myGenobject> >::iterator */
static void G__setup_memvarvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator));
   { vector<myGenobject,allocator<myGenobject> >::iterator *p; p=(vector<myGenobject,allocator<myGenobject> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvareventdict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncmyobject(void) {
   /* myobject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventdictLN_myobject));
   G__memfunc_setup("myobject",861,G__eventdict_209_0_1, 105, G__get_linked_tagnum(&G__eventdictLN_myobject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__eventdict_209_0_2, 85, G__get_linked_tagnum(&G__eventdictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&myobject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__eventdict_209_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&myobject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__eventdict_209_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&myobject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__eventdict_209_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&myobject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__eventdictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__eventdict_209_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__eventdict_209_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&myobject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__eventdict_209_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&myobject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__eventdict_209_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&myobject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__eventdict_209_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&myobject::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("myobject", 861, G__eventdict_209_0_14, (int) ('i'), G__get_linked_tagnum(&G__eventdictLN_myobject), -1, 0, 1, 1, 1, 0, "u 'myobject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~myobject", 987, G__eventdict_209_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__eventdict_209_0_16, (int) ('u'), G__get_linked_tagnum(&G__eventdictLN_myobject), -1, 1, 1, 1, 1, 0, "u 'myobject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmyGenobject(void) {
   /* myGenobject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventdictLN_myGenobject));
   G__memfunc_setup("myGenobject",1143,G__eventdict_446_0_1, 105, G__get_linked_tagnum(&G__eventdictLN_myGenobject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__eventdict_446_0_2, 85, G__get_linked_tagnum(&G__eventdictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&myGenobject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__eventdict_446_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&myGenobject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__eventdict_446_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&myGenobject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__eventdict_446_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&myGenobject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__eventdictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__eventdict_446_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__eventdict_446_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&myGenobject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__eventdict_446_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&myGenobject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__eventdict_446_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&myGenobject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__eventdict_446_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&myGenobject::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("myGenobject", 1143, G__eventdict_446_0_14, (int) ('i'), G__get_linked_tagnum(&G__eventdictLN_myGenobject), -1, 0, 1, 1, 1, 0, "u 'myGenobject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~myGenobject", 1269, G__eventdict_446_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__eventdict_446_0_16, (int) ('u'), G__get_linked_tagnum(&G__eventdictLN_myGenobject), -1, 1, 1, 1, 1, 0, "u 'myGenobject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmyevent(void) {
   /* myevent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventdictLN_myevent));
   G__memfunc_setup("myevent",776,G__eventdict_447_0_1, 105, G__get_linked_tagnum(&G__eventdictLN_myevent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__eventdict_447_0_2, 85, G__get_linked_tagnum(&G__eventdictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&myevent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__eventdict_447_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&myevent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__eventdict_447_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&myevent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__eventdict_447_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&myevent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__eventdictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__eventdict_447_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__eventdict_447_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&myevent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__eventdict_447_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&myevent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__eventdict_447_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&myevent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__eventdict_447_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&myevent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("myevent", 776, G__eventdict_447_0_14, (int) ('i'), G__get_linked_tagnum(&G__eventdictLN_myevent), -1, 0, 1, 1, 1, 0, "u 'myevent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~myevent", 902, G__eventdict_447_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__eventdict_447_0_16, (int) ('u'), G__get_linked_tagnum(&G__eventdictLN_myevent), -1, 1, 1, 1, 1, 0, "u 'myevent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEmyobjectcOallocatorlEmyobjectgRsPgR(void) {
   /* vector<myobject,allocator<myobject> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR));
   G__memfunc_setup("at",213,G__eventdict_449_0_1, 117, G__get_linked_tagnum(&G__eventdictLN_myobject), G__defined_typename("vector<myobject,allocator<myobject> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<myobject,allocator<myobject> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__eventdict_449_0_2, 117, G__get_linked_tagnum(&G__eventdictLN_myobject), G__defined_typename("vector<myobject,allocator<myobject> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<myobject,allocator<myobject> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__eventdict_449_0_3, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__eventdict_449_0_4, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__eventdict_449_0_5, 117, G__get_linked_tagnum(&G__eventdictLN_reverse_iteratorlEvectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiteratorgR), G__defined_typename("vector<myobject,allocator<myobject> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__eventdict_449_0_6, 117, G__get_linked_tagnum(&G__eventdictLN_reverse_iteratorlEvectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiteratorgR), G__defined_typename("vector<myobject,allocator<myobject> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__eventdict_449_0_7, 107, -1, G__defined_typename("vector<myobject,allocator<myobject> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__eventdict_449_0_8, 107, -1, G__defined_typename("vector<myobject,allocator<myobject> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__eventdict_449_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<myobject,allocator<myobject> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__eventdict_449_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<myobject,allocator<myobject> >::size_type' 0 - sz u 'myobject' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__eventdict_449_0_11, 107, -1, G__defined_typename("vector<myobject,allocator<myobject> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__eventdict_449_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__eventdict_449_0_13, 117, G__get_linked_tagnum(&G__eventdictLN_myobject), G__defined_typename("vector<myobject,allocator<myobject> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<myobject,allocator<myobject> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__eventdict_449_0_14, 117, G__get_linked_tagnum(&G__eventdictLN_myobject), G__defined_typename("vector<myobject,allocator<myobject> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<myobject,allocator<myobject> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<myobject,allocator<myobject> >",3662,G__eventdict_449_0_15, 105, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<myobject,allocator<myobject> >",3662,G__eventdict_449_0_16, 105, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<myobject,allocator<myobject> >::size_type' 0 - n u 'myobject' - 11 'myobject()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<myobject,allocator<myobject> >",3662,G__eventdict_449_0_17, 105, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<myobject,allocator<myobject> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<myobject,allocator<myobject> >",3662,G__eventdict_449_0_18, 105, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<myobject,allocator<myobject> >::iterator' 'vector<myobject,allocator<myobject> >::const_iterator' 10 - first u 'vector<myobject,allocator<myobject> >::iterator' 'vector<myobject,allocator<myobject> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__eventdict_449_0_19, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<myobject,allocator<myobject> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__eventdict_449_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<myobject,allocator<myobject> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__eventdict_449_0_21, 117, G__get_linked_tagnum(&G__eventdictLN_myobject), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__eventdict_449_0_22, 117, G__get_linked_tagnum(&G__eventdictLN_myobject), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__eventdict_449_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'myobject' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__eventdict_449_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<myobject,allocator<myobject> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__eventdict_449_0_25, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<myobject,allocator<myobject> >::iterator' - 0 - position u 'myobject' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__eventdict_449_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<myobject,allocator<myobject> >::iterator' - 0 - position u 'vector<myobject,allocator<myobject> >::iterator' 'vector<myobject,allocator<myobject> >::const_iterator' 10 - first "
"u 'vector<myobject,allocator<myobject> >::iterator' 'vector<myobject,allocator<myobject> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__eventdict_449_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<myobject,allocator<myobject> >::iterator' - 0 - position k - 'vector<myobject,allocator<myobject> >::size_type' 0 - n "
"u 'myobject' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__eventdict_449_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__eventdict_449_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<myobject,allocator<myobject> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__eventdict_449_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<myobject,allocator<myobject> >::iterator' - 0 - first u 'vector<myobject,allocator<myobject> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__eventdict_449_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<myobject,allocator<myobject> >", 3788, G__eventdict_449_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator(void) {
   /* vector<myobject,allocator<myobject> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__eventdict_450_0_1, 105, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__eventdict_450_0_2, 105, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator), -1, 0, 1, 5, 1, 0, "U 'myobject' 'vector<myobject,allocator<myobject> >::iterator::pointer' 11 - __i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__eventdict_450_0_3, 117, G__get_linked_tagnum(&G__eventdictLN_myobject), G__defined_typename("vector<myobject,allocator<myobject> >::iterator::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__eventdict_450_0_4, 85, G__get_linked_tagnum(&G__eventdictLN_myobject), G__defined_typename("vector<myobject,allocator<myobject> >::iterator::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__eventdict_450_0_5, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__eventdict_450_0_6, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__eventdict_450_0_7, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__eventdict_450_0_8, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__eventdict_450_0_9, 117, G__get_linked_tagnum(&G__eventdictLN_myobject), G__defined_typename("vector<myobject,allocator<myobject> >::iterator::reference"), 1, 1, 1, 1, 8, "l - 'vector<myobject,allocator<myobject> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__eventdict_450_0_10, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<myobject,allocator<myobject> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__eventdict_450_0_11, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<myobject,allocator<myobject> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__eventdict_450_0_12, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<myobject,allocator<myobject> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__eventdict_450_0_13, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<myobject,allocator<myobject> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__eventdict_450_0_14, 85, G__get_linked_tagnum(&G__eventdictLN_myobject), G__defined_typename("vector<myobject,allocator<myobject> >::iterator::pointer"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__eventdict_450_0_15, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<myobject,allocator<myobject> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("iterator", 874, G__eventdict_450_0_16, (int) ('i'), G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<myobject,allocator<myobject> >::iterator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__eventdict_450_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR(void) {
   /* vector<myGenobject,allocator<myGenobject> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR));
   G__memfunc_setup("at",213,G__eventdict_453_0_1, 117, G__get_linked_tagnum(&G__eventdictLN_myGenobject), G__defined_typename("vector<myGenobject,allocator<myGenobject> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<myGenobject,allocator<myGenobject> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__eventdict_453_0_2, 117, G__get_linked_tagnum(&G__eventdictLN_myGenobject), G__defined_typename("vector<myGenobject,allocator<myGenobject> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<myGenobject,allocator<myGenobject> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__eventdict_453_0_3, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__eventdict_453_0_4, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__eventdict_453_0_5, 117, G__get_linked_tagnum(&G__eventdictLN_reverse_iteratorlEvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiteratorgR), G__defined_typename("vector<myGenobject,allocator<myGenobject> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__eventdict_453_0_6, 117, G__get_linked_tagnum(&G__eventdictLN_reverse_iteratorlEvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiteratorgR), G__defined_typename("vector<myGenobject,allocator<myGenobject> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__eventdict_453_0_7, 107, -1, G__defined_typename("vector<myGenobject,allocator<myGenobject> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__eventdict_453_0_8, 107, -1, G__defined_typename("vector<myGenobject,allocator<myGenobject> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__eventdict_453_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<myGenobject,allocator<myGenobject> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__eventdict_453_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<myGenobject,allocator<myGenobject> >::size_type' 0 - sz u 'myGenobject' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__eventdict_453_0_11, 107, -1, G__defined_typename("vector<myGenobject,allocator<myGenobject> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__eventdict_453_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__eventdict_453_0_13, 117, G__get_linked_tagnum(&G__eventdictLN_myGenobject), G__defined_typename("vector<myGenobject,allocator<myGenobject> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<myGenobject,allocator<myGenobject> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__eventdict_453_0_14, 117, G__get_linked_tagnum(&G__eventdictLN_myGenobject), G__defined_typename("vector<myGenobject,allocator<myGenobject> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<myGenobject,allocator<myGenobject> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<myGenobject,allocator<myGenobject> >",4226,G__eventdict_453_0_15, 105, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<myGenobject,allocator<myGenobject> >",4226,G__eventdict_453_0_16, 105, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<myGenobject,allocator<myGenobject> >::size_type' 0 - n u 'myGenobject' - 11 'myGenobject()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<myGenobject,allocator<myGenobject> >",4226,G__eventdict_453_0_17, 105, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<myGenobject,allocator<myGenobject> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<myGenobject,allocator<myGenobject> >",4226,G__eventdict_453_0_18, 105, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<myGenobject,allocator<myGenobject> >::iterator' 'vector<myGenobject,allocator<myGenobject> >::const_iterator' 10 - first u 'vector<myGenobject,allocator<myGenobject> >::iterator' 'vector<myGenobject,allocator<myGenobject> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__eventdict_453_0_19, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<myGenobject,allocator<myGenobject> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__eventdict_453_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<myGenobject,allocator<myGenobject> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__eventdict_453_0_21, 117, G__get_linked_tagnum(&G__eventdictLN_myGenobject), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__eventdict_453_0_22, 117, G__get_linked_tagnum(&G__eventdictLN_myGenobject), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__eventdict_453_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'myGenobject' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__eventdict_453_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<myGenobject,allocator<myGenobject> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__eventdict_453_0_25, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 0 - position u 'myGenobject' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__eventdict_453_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 0 - position u 'vector<myGenobject,allocator<myGenobject> >::iterator' 'vector<myGenobject,allocator<myGenobject> >::const_iterator' 10 - first "
"u 'vector<myGenobject,allocator<myGenobject> >::iterator' 'vector<myGenobject,allocator<myGenobject> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__eventdict_453_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 0 - position k - 'vector<myGenobject,allocator<myGenobject> >::size_type' 0 - n "
"u 'myGenobject' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__eventdict_453_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__eventdict_453_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__eventdict_453_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 0 - first u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__eventdict_453_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<myGenobject,allocator<myGenobject> >", 4352, G__eventdict_453_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator(void) {
   /* vector<myGenobject,allocator<myGenobject> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__eventdict_454_0_1, 105, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__eventdict_454_0_2, 105, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator), -1, 0, 1, 5, 1, 0, "U 'myGenobject' 'vector<myGenobject,allocator<myGenobject> >::iterator::pointer' 11 - __i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__eventdict_454_0_3, 117, G__get_linked_tagnum(&G__eventdictLN_myGenobject), G__defined_typename("vector<myGenobject,allocator<myGenobject> >::iterator::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__eventdict_454_0_4, 85, G__get_linked_tagnum(&G__eventdictLN_myGenobject), G__defined_typename("vector<myGenobject,allocator<myGenobject> >::iterator::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__eventdict_454_0_5, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__eventdict_454_0_6, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__eventdict_454_0_7, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__eventdict_454_0_8, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__eventdict_454_0_9, 117, G__get_linked_tagnum(&G__eventdictLN_myGenobject), G__defined_typename("vector<myGenobject,allocator<myGenobject> >::iterator::reference"), 1, 1, 1, 1, 8, "l - 'vector<myGenobject,allocator<myGenobject> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__eventdict_454_0_10, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<myGenobject,allocator<myGenobject> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__eventdict_454_0_11, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<myGenobject,allocator<myGenobject> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__eventdict_454_0_12, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<myGenobject,allocator<myGenobject> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__eventdict_454_0_13, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<myGenobject,allocator<myGenobject> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__eventdict_454_0_14, 85, G__get_linked_tagnum(&G__eventdictLN_myGenobject), G__defined_typename("vector<myGenobject,allocator<myGenobject> >::iterator::pointer"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__eventdict_454_0_15, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("iterator", 874, G__eventdict_454_0_16, (int) ('i'), G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__eventdict_454_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunceventdict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globaleventdict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
   G__memfunc_setup("operator==", 998, G__eventdict__0_1744, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<myobject,allocator<myobject> >::iterator' - 11 - x u 'vector<myobject,allocator<myobject> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__eventdict__0_1745, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<myobject,allocator<myobject> >::iterator' - 11 - x u 'vector<myobject,allocator<myobject> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__eventdict__0_1746, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<myobject,allocator<myobject> >::iterator' - 11 - x u 'vector<myobject,allocator<myobject> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__eventdict__0_1747, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<myobject,allocator<myobject> >::iterator' - 11 - x u 'vector<myobject,allocator<myobject> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__eventdict__0_1748, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<myobject,allocator<myobject> >::iterator' - 11 - x u 'vector<myobject,allocator<myobject> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__eventdict__0_1749, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<myobject,allocator<myobject> >::iterator' - 11 - x u 'vector<myobject,allocator<myobject> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__eventdict__0_1750, 108, -1, G__defined_typename("difference_type"), 0, 2, 1, 1, 8, 
"u 'vector<myobject,allocator<myobject> >::iterator' - 11 - x u 'vector<myobject,allocator<myobject> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__eventdict__0_1751, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 8, 
"l - 'difference_type' 10 - x u 'vector<myobject,allocator<myobject> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__eventdict__0_1812, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 11 - x u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__eventdict__0_1813, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 11 - x u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__eventdict__0_1814, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 11 - x u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__eventdict__0_1815, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 11 - x u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__eventdict__0_1816, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 11 - x u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__eventdict__0_1817, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 11 - x u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__eventdict__0_1818, 108, -1, G__defined_typename("difference_type"), 0, 2, 1, 1, 8, 
"u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 11 - x u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__eventdict__0_1819, 117, G__get_linked_tagnum(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 8, 
"l - 'difference_type' 10 - x u 'vector<myGenobject,allocator<myGenobject> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func18() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funceventdict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__eventdictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__eventdictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__eventdictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__eventdictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__eventdictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__eventdictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__eventdictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__eventdictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__eventdictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__eventdictLN_myobject = { "myobject" , 99 , -1 };
G__linked_taginfo G__eventdictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR = { "map<string,int,less<string>,allocator<pair<const string,int> > >" , 99 , -1 };
G__linked_taginfo G__eventdictLN_myGenobject = { "myGenobject" , 99 , -1 };
G__linked_taginfo G__eventdictLN_myevent = { "myevent" , 99 , -1 };
G__linked_taginfo G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR = { "vector<myobject,allocator<myobject> >" , 99 , -1 };
G__linked_taginfo G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator = { "vector<myobject,allocator<myobject> >::iterator" , 99 , -1 };
G__linked_taginfo G__eventdictLN_reverse_iteratorlEvectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<myobject,allocator<myobject> >::iterator>" , 99 , -1 };
G__linked_taginfo G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR = { "vector<myGenobject,allocator<myGenobject> >" , 99 , -1 };
G__linked_taginfo G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator = { "vector<myGenobject,allocator<myGenobject> >::iterator" , 99 , -1 };
G__linked_taginfo G__eventdictLN_reverse_iteratorlEvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<myGenobject,allocator<myGenobject> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableeventdict() {
  G__eventdictLN_TClass.tagnum = -1 ;
  G__eventdictLN_TBuffer.tagnum = -1 ;
  G__eventdictLN_TMemberInspector.tagnum = -1 ;
  G__eventdictLN_TObject.tagnum = -1 ;
  G__eventdictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__eventdictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__eventdictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__eventdictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__eventdictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__eventdictLN_myobject.tagnum = -1 ;
  G__eventdictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__eventdictLN_myGenobject.tagnum = -1 ;
  G__eventdictLN_myevent.tagnum = -1 ;
  G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR.tagnum = -1 ;
  G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator.tagnum = -1 ;
  G__eventdictLN_reverse_iteratorlEvectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR.tagnum = -1 ;
  G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator.tagnum = -1 ;
  G__eventdictLN_reverse_iteratorlEvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableeventdict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__eventdictLN_TClass);
   G__get_linked_tagnum_fwd(&G__eventdictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__eventdictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__eventdictLN_TObject);
   G__get_linked_tagnum_fwd(&G__eventdictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__eventdictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__eventdictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__eventdictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__eventdictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventdictLN_myobject),sizeof(myobject),-1,292096,(char*)NULL,G__setup_memvarmyobject,G__setup_memfuncmyobject);
   G__get_linked_tagnum_fwd(&G__eventdictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventdictLN_myGenobject),sizeof(myGenobject),-1,292096,(char*)NULL,G__setup_memvarmyGenobject,G__setup_memfuncmyGenobject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventdictLN_myevent),sizeof(myevent),-1,292096,(char*)NULL,G__setup_memvarmyevent,G__setup_memfuncmyevent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgR),sizeof(vector<myobject,allocator<myobject> >),-1,36608,(char*)NULL,G__setup_memvarvectorlEmyobjectcOallocatorlEmyobjectgRsPgR,G__setup_memfuncvectorlEmyobjectcOallocatorlEmyobjectgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventdictLN_vectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator),sizeof(vector<myobject,allocator<myobject> >::iterator),-1,35072,(char*)NULL,G__setup_memvarvectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator,G__setup_memfuncvectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__eventdictLN_reverse_iteratorlEvectorlEmyobjectcOallocatorlEmyobjectgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR),sizeof(vector<myGenobject,allocator<myGenobject> >),-1,36608,(char*)NULL,G__setup_memvarvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR,G__setup_memfuncvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventdictLN_vectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator),sizeof(vector<myGenobject,allocator<myGenobject> >::iterator),-1,35072,(char*)NULL,G__setup_memvarvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator,G__setup_memfuncvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__eventdictLN_reverse_iteratorlEvectorlEmyGenobjectcOallocatorlEmyGenobjectgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupeventdict(void) {
  G__check_setup_version(30051515,"G__cpp_setupeventdict()");
  G__set_cpp_environmenteventdict();
  G__cpp_setup_tagtableeventdict();

  G__cpp_setup_inheritanceeventdict();

  G__cpp_setup_typetableeventdict();

  G__cpp_setup_memvareventdict();

  G__cpp_setup_memfunceventdict();
  G__cpp_setup_globaleventdict();
  G__cpp_setup_funceventdict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunceventdict();
  return;
}
class G__cpp_setup_initeventdict {
  public:
    G__cpp_setup_initeventdict() { G__add_setup_func("eventdict",(G__incsetup)(&G__cpp_setupeventdict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initeventdict() { G__remove_setup_func("eventdict"); }
};
G__cpp_setup_initeventdict G__cpp_setup_initializereventdict;

